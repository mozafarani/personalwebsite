import React from 'react';
import { ResponsiveValue } from '../hooks/useResponsiveValue';
import { SxProp } from '../sx';
import { ForwardRefComponent as PolymorphicForwardRefComponent } from '../utils/polymorphic';
export type sharedPropTypes = {
    hidden?: boolean | ResponsiveValue<boolean>;
} & SxProp;
export type PageHeaderProps = {
    'aria-label'?: React.AriaAttributes['aria-label'];
    as?: React.ElementType | 'header' | 'div';
} & sharedPropTypes;
type LinkProps = Pick<React.AnchorHTMLAttributes<HTMLAnchorElement>, 'download' | 'href' | 'hrefLang' | 'media' | 'ping' | 'rel' | 'target' | 'type' | 'referrerPolicy'>;
export type ParentLinkProps = PageHeaderProps & LinkProps;
type TitleAreaProps = {
    variant?: 'subtitle' | 'medium' | 'large' | ResponsiveValue<'subtitle' | 'medium' | 'large'>;
} & PageHeaderProps;
export type TitleProps = {
    as?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';
} & PageHeaderProps;
export declare const PageHeader: React.FC<React.PropsWithChildren<PageHeaderProps>> & {
    ContextArea: React.FC<React.PropsWithChildren<PageHeaderProps>>;
    ParentLink: PolymorphicForwardRefComponent<"a", ParentLinkProps>;
    ContextBar: React.FC<React.PropsWithChildren<PageHeaderProps>>;
    ContextAreaActions: React.FC<React.PropsWithChildren<PageHeaderProps>>;
    TitleArea: React.FC<React.PropsWithChildren<TitleAreaProps>>;
    LeadingAction: React.FC<React.PropsWithChildren<PageHeaderProps>>;
    LeadingVisual: React.FC<React.PropsWithChildren<PageHeaderProps>>;
    Title: React.FC<React.PropsWithChildren<TitleProps>>;
    TrailingVisual: React.FC<React.PropsWithChildren<PageHeaderProps>>;
    TrailingAction: React.FC<React.PropsWithChildren<PageHeaderProps>>;
    Actions: React.FC<React.PropsWithChildren<PageHeaderProps>>;
    Description: React.FC<React.PropsWithChildren<PageHeaderProps>>;
    Navigation: React.FC<React.PropsWithChildren<PageHeaderProps>>;
};
export {};
