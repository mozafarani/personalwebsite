{"ast":null,"code":"import _objectSpread from \"/Users/mohammedalzafarani/Desktop/personalwebsite/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport React from 'react';\nimport Box from './Box.js';\nimport VisuallyHidden from './_VisuallyHidden.js';\nvar InputLabel = function InputLabel(_ref) {\n  var children = _ref.children,\n    disabled = _ref.disabled,\n    htmlFor = _ref.htmlFor,\n    id = _ref.id,\n    required = _ref.required,\n    visuallyHidden = _ref.visuallyHidden,\n    sx = _ref.sx,\n    _ref$as = _ref.as,\n    as = _ref$as === void 0 ? 'label' : _ref$as;\n  return /*#__PURE__*/React.createElement(VisuallyHidden, {\n    isVisible: !visuallyHidden,\n    as: as /* This assertion is clearly wrong, but it's the only way TS will allow the htmlFor prop to be possibly defined */,\n\n    htmlFor: htmlFor,\n    id: id,\n    sx: _objectSpread({\n      fontWeight: 'bold',\n      fontSize: 1,\n      display: 'block',\n      color: disabled ? 'fg.muted' : 'fg.default',\n      cursor: disabled ? 'default' : 'pointer',\n      alignSelf: 'flex-start'\n    }, sx)\n  }, required ? /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    as: \"span\"\n  }, /*#__PURE__*/React.createElement(Box, {\n    mr: 1\n  }, children), /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"*\")) : children);\n};\nInputLabel.displayName = \"InputLabel\";\nvar InputLabel$1 = InputLabel;\nexport { InputLabel$1 as default };","map":{"version":3,"names":["React","Box","VisuallyHidden","InputLabel","children","disabled","htmlFor","id","required","visuallyHidden","sx","as","createElement","isVisible","fontWeight","fontSize","display","color","cursor","alignSelf","mr","displayName","InputLabel$1","default"],"sources":["/Users/mohammedalzafarani/Desktop/personalwebsite/node_modules/@primer/react/lib-esm/_InputLabel.js"],"sourcesContent":["import React from 'react';\nimport Box from './Box.js';\nimport VisuallyHidden from './_VisuallyHidden.js';\n\nconst InputLabel = ({\n  children,\n  disabled,\n  htmlFor,\n  id,\n  required,\n  visuallyHidden,\n  sx,\n  as = 'label'\n}) => {\n  return /*#__PURE__*/React.createElement(VisuallyHidden, {\n    isVisible: !visuallyHidden,\n    as: as /* This assertion is clearly wrong, but it's the only way TS will allow the htmlFor prop to be possibly defined */,\n\n    htmlFor: htmlFor,\n    id: id,\n    sx: {\n      fontWeight: 'bold',\n      fontSize: 1,\n      display: 'block',\n      color: disabled ? 'fg.muted' : 'fg.default',\n      cursor: disabled ? 'default' : 'pointer',\n      alignSelf: 'flex-start',\n      ...sx\n    }\n  }, required ? /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    as: \"span\"\n  }, /*#__PURE__*/React.createElement(Box, {\n    mr: 1\n  }, children), /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"*\")) : children);\n};\nInputLabel.displayName = \"InputLabel\";\nvar InputLabel$1 = InputLabel;\n\nexport { InputLabel$1 as default };\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,UAAU;AAC1B,OAAOC,cAAc,MAAM,sBAAsB;AAEjD,IAAMC,UAAU,GAAG,SAAbA,UAAU,OASV;EAAA,IARJC,QAAQ,QAARA,QAAQ;IACRC,QAAQ,QAARA,QAAQ;IACRC,OAAO,QAAPA,OAAO;IACPC,EAAE,QAAFA,EAAE;IACFC,QAAQ,QAARA,QAAQ;IACRC,cAAc,QAAdA,cAAc;IACdC,EAAE,QAAFA,EAAE;IAAA,eACFC,EAAE;IAAFA,EAAE,wBAAG,OAAO;EAEZ,OAAO,aAAaX,KAAK,CAACY,aAAa,CAACV,cAAc,EAAE;IACtDW,SAAS,EAAE,CAACJ,cAAc;IAC1BE,EAAE,EAAEA,EAAE,CAAC;;IAEPL,OAAO,EAAEA,OAAO;IAChBC,EAAE,EAAEA,EAAE;IACNG,EAAE;MACAI,UAAU,EAAE,MAAM;MAClBC,QAAQ,EAAE,CAAC;MACXC,OAAO,EAAE,OAAO;MAChBC,KAAK,EAAEZ,QAAQ,GAAG,UAAU,GAAG,YAAY;MAC3Ca,MAAM,EAAEb,QAAQ,GAAG,SAAS,GAAG,SAAS;MACxCc,SAAS,EAAE;IAAY,GACpBT,EAAE;EAET,CAAC,EAAEF,QAAQ,GAAG,aAAaR,KAAK,CAACY,aAAa,CAACX,GAAG,EAAE;IAClDe,OAAO,EAAE,MAAM;IACfL,EAAE,EAAE;EACN,CAAC,EAAE,aAAaX,KAAK,CAACY,aAAa,CAACX,GAAG,EAAE;IACvCmB,EAAE,EAAE;EACN,CAAC,EAAEhB,QAAQ,CAAC,EAAE,aAAaJ,KAAK,CAACY,aAAa,CAAC,MAAM,EAAE;IACrD,aAAa,EAAE;EACjB,CAAC,EAAE,GAAG,CAAC,CAAC,GAAGR,QAAQ,CAAC;AACtB,CAAC;AACDD,UAAU,CAACkB,WAAW,GAAG,YAAY;AACrC,IAAIC,YAAY,GAAGnB,UAAU;AAE7B,SAASmB,YAAY,IAAIC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}