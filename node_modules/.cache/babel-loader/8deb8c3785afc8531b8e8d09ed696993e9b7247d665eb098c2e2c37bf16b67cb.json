{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/mohammedalzafarani/Desktop/personalwebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/Users/mohammedalzafarani/Desktop/personalwebsite/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/mohammedalzafarani/Desktop/personalwebsite/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport Combobox from '@github/combobox-nav';\nimport { useSSRSafeId } from '@react-aria/ssr';\nimport { useRef, useState, useCallback, useEffect, useLayoutEffect } from 'react';\n\n/**\n * Lightweight hook wrapper around the GitHub `Combobox` class from `@github/combobox-nav`.\n * With this hook, keyboard navigation through suggestions is automatically handled and\n * accessibility attributes are added.\n *\n * `useCombobox` will set nearly all necessary attributes by effect, but you **must** set\n * `role=\"option\"` on list items in order for them to be 'seen' by the combobox. Style the\n * currently highlighted option with the `[aria-selected=\"true\"]` selector.\n */\nvar useCombobox = function useCombobox(_ref) {\n  var isOpen = _ref.isOpen,\n    list = _ref.listElement,\n    input = _ref.inputElement,\n    externalOnCommit = _ref.onCommit,\n    options = _ref.options,\n    _ref$tabInsertsSugges = _ref.tabInsertsSuggestions,\n    tabInsertsSuggestions = _ref$tabInsertsSugges === void 0 ? false : _ref$tabInsertsSugges,\n    _ref$defaultFirstOpti = _ref.defaultFirstOption,\n    defaultFirstOption = _ref$defaultFirstOpti === void 0 ? false : _ref$defaultFirstOpti;\n  var id = useSSRSafeId();\n  var optionIdPrefix = \"combobox-\".concat(id, \"__option\");\n  var isOpenRef = useRef(isOpen);\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    comboboxInstance = _useState2[0],\n    setComboboxInstance = _useState2[1];\n\n  /** Get all option element instances. */\n  var getOptionElements = useCallback(function () {\n    var _list$querySelectorAl;\n    return _toConsumableArray((_list$querySelectorAl = list === null || list === void 0 ? void 0 : list.querySelectorAll('[role=option]')) !== null && _list$querySelectorAl !== void 0 ? _list$querySelectorAl : []);\n  }, [list]);\n  var onCommit = useCallback(function (e) {\n    var nativeEvent = e;\n    var indexAttr = nativeEvent.target.getAttribute('data-combobox-list-index');\n    var index = indexAttr !== null ? parseInt(indexAttr, 10) : NaN;\n    var option = options[index];\n    if (option) externalOnCommit({\n      nativeEvent: nativeEvent,\n      option: option\n    });\n  }, [options, externalOnCommit]);\n\n  // Prevent focus leaving the input when clicking an item\n  var onOptionMouseDown = useCallback(function (e) {\n    return e.preventDefault();\n  }, []);\n  useEffect(function initializeComboboxInstance() {\n    if (input && list) {\n      if (!list.getAttribute('role')) list.setAttribute('role', 'listbox');\n      var cb = new Combobox(input, list, {\n        tabInsertsSuggestions: tabInsertsSuggestions,\n        defaultFirstOption: defaultFirstOption\n      });\n      if (isOpenRef.current) cb.start();\n\n      // By using state instead of a ref here, we trigger the toggleKeyboardEventHandling\n      // effect. Otherwise we'd have to depend on isOpen in this effect to start the instance\n      // if it's initially open\n      setComboboxInstance(cb);\n      return function () {\n        cb.destroy();\n        setComboboxInstance(null);\n      };\n    }\n  }, [input, list, tabInsertsSuggestions, defaultFirstOption]);\n  useEffect(function toggleKeyboardEventHandling() {\n    var wasOpen = isOpenRef.current;\n    isOpenRef.current = isOpen;\n    if (isOpen === wasOpen || !comboboxInstance) return;\n    if (isOpen) {\n      comboboxInstance.start();\n    } else {\n      comboboxInstance.stop();\n    }\n  }, [isOpen, comboboxInstance]);\n  useEffect(function bindCommitEvent() {\n    list === null || list === void 0 ? void 0 : list.addEventListener('combobox-commit', onCommit);\n    return function () {\n      return list === null || list === void 0 ? void 0 : list.removeEventListener('combobox-commit', onCommit);\n    };\n  }, [onCommit, list]);\n  useLayoutEffect(function () {\n    var optionElements = getOptionElements();\n    // Ensure each option has a unique ID (required by the Combobox class), but respect user provided IDs\n    var _iterator = _createForOfIteratorHelper(optionElements.entries()),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _slicedToArray(_step.value, 2),\n          i = _step$value[0],\n          option = _step$value[1];\n        if (!option.id || option.id.startsWith(optionIdPrefix)) option.id = \"\".concat(optionIdPrefix, \"-\").concat(i);\n        option.setAttribute('data-combobox-list-index', i.toString());\n        option.addEventListener('mousedown', onOptionMouseDown);\n        // the combobox class has a bug where it resets the default on navigate, but not on clearSelection\n        option.removeAttribute('data-combobox-option-default');\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    comboboxInstance === null || comboboxInstance === void 0 ? void 0 : comboboxInstance.clearSelection();\n    return function () {\n      var _iterator2 = _createForOfIteratorHelper(optionElements),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var option = _step2.value;\n          option.removeEventListener('mousedown', onOptionMouseDown);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    };\n  }, [getOptionElements, optionIdPrefix, options, comboboxInstance, onOptionMouseDown]);\n};\nexport { useCombobox };","map":{"version":3,"names":["Combobox","useSSRSafeId","useRef","useState","useCallback","useEffect","useLayoutEffect","useCombobox","isOpen","list","listElement","input","inputElement","externalOnCommit","onCommit","options","tabInsertsSuggestions","defaultFirstOption","id","optionIdPrefix","isOpenRef","comboboxInstance","setComboboxInstance","getOptionElements","_list$querySelectorAl","querySelectorAll","e","nativeEvent","indexAttr","target","getAttribute","index","parseInt","NaN","option","onOptionMouseDown","preventDefault","initializeComboboxInstance","setAttribute","cb","current","start","destroy","toggleKeyboardEventHandling","wasOpen","stop","bindCommitEvent","addEventListener","removeEventListener","optionElements","entries","i","startsWith","toString","removeAttribute","clearSelection"],"sources":["/Users/mohammedalzafarani/Desktop/personalwebsite/node_modules/@primer/react/lib-esm/drafts/hooks/useCombobox.js"],"sourcesContent":["import Combobox from '@github/combobox-nav';\nimport { useSSRSafeId } from '@react-aria/ssr';\nimport { useRef, useState, useCallback, useEffect, useLayoutEffect } from 'react';\n\n/**\n * Lightweight hook wrapper around the GitHub `Combobox` class from `@github/combobox-nav`.\n * With this hook, keyboard navigation through suggestions is automatically handled and\n * accessibility attributes are added.\n *\n * `useCombobox` will set nearly all necessary attributes by effect, but you **must** set\n * `role=\"option\"` on list items in order for them to be 'seen' by the combobox. Style the\n * currently highlighted option with the `[aria-selected=\"true\"]` selector.\n */\nconst useCombobox = ({\n  isOpen,\n  listElement: list,\n  inputElement: input,\n  onCommit: externalOnCommit,\n  options,\n  tabInsertsSuggestions = false,\n  defaultFirstOption = false\n}) => {\n  const id = useSSRSafeId();\n  const optionIdPrefix = `combobox-${id}__option`;\n  const isOpenRef = useRef(isOpen);\n  const [comboboxInstance, setComboboxInstance] = useState(null);\n\n  /** Get all option element instances. */\n  const getOptionElements = useCallback(() => {\n    var _list$querySelectorAl;\n    return [...((_list$querySelectorAl = list === null || list === void 0 ? void 0 : list.querySelectorAll('[role=option]')) !== null && _list$querySelectorAl !== void 0 ? _list$querySelectorAl : [])];\n  }, [list]);\n  const onCommit = useCallback(e => {\n    const nativeEvent = e;\n    const indexAttr = nativeEvent.target.getAttribute('data-combobox-list-index');\n    const index = indexAttr !== null ? parseInt(indexAttr, 10) : NaN;\n    const option = options[index];\n    if (option) externalOnCommit({\n      nativeEvent,\n      option\n    });\n  }, [options, externalOnCommit]);\n\n  // Prevent focus leaving the input when clicking an item\n  const onOptionMouseDown = useCallback(e => e.preventDefault(), []);\n  useEffect(function initializeComboboxInstance() {\n    if (input && list) {\n      if (!list.getAttribute('role')) list.setAttribute('role', 'listbox');\n      const cb = new Combobox(input, list, {\n        tabInsertsSuggestions,\n        defaultFirstOption\n      });\n      if (isOpenRef.current) cb.start();\n\n      // By using state instead of a ref here, we trigger the toggleKeyboardEventHandling\n      // effect. Otherwise we'd have to depend on isOpen in this effect to start the instance\n      // if it's initially open\n      setComboboxInstance(cb);\n      return () => {\n        cb.destroy();\n        setComboboxInstance(null);\n      };\n    }\n  }, [input, list, tabInsertsSuggestions, defaultFirstOption]);\n  useEffect(function toggleKeyboardEventHandling() {\n    const wasOpen = isOpenRef.current;\n    isOpenRef.current = isOpen;\n    if (isOpen === wasOpen || !comboboxInstance) return;\n    if (isOpen) {\n      comboboxInstance.start();\n    } else {\n      comboboxInstance.stop();\n    }\n  }, [isOpen, comboboxInstance]);\n  useEffect(function bindCommitEvent() {\n    list === null || list === void 0 ? void 0 : list.addEventListener('combobox-commit', onCommit);\n    return () => list === null || list === void 0 ? void 0 : list.removeEventListener('combobox-commit', onCommit);\n  }, [onCommit, list]);\n  useLayoutEffect(() => {\n    const optionElements = getOptionElements();\n    // Ensure each option has a unique ID (required by the Combobox class), but respect user provided IDs\n    for (const [i, option] of optionElements.entries()) {\n      if (!option.id || option.id.startsWith(optionIdPrefix)) option.id = `${optionIdPrefix}-${i}`;\n      option.setAttribute('data-combobox-list-index', i.toString());\n      option.addEventListener('mousedown', onOptionMouseDown);\n      // the combobox class has a bug where it resets the default on navigate, but not on clearSelection\n      option.removeAttribute('data-combobox-option-default');\n    }\n    comboboxInstance === null || comboboxInstance === void 0 ? void 0 : comboboxInstance.clearSelection();\n    return () => {\n      for (const option of optionElements) option.removeEventListener('mousedown', onOptionMouseDown);\n    };\n  }, [getOptionElements, optionIdPrefix, options, comboboxInstance, onOptionMouseDown]);\n};\n\nexport { useCombobox };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}