{"ast":null,"code":"import React from 'react';\nimport { useForceUpdate } from './use-force-update.js';\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect.js';\n\n/** createSlots is a factory that can create a\n *  typesafe Slots + Slot pair to use in a component definition\n *  For example: ActionList.Item uses createSlots to get a Slots wrapper\n *  + Slot component that is used by LeadingVisual, Description\n */\nconst createSlots = slotNames => {\n  const SlotsContext = /*#__PURE__*/React.createContext({\n    registerSlot: () => null,\n    unregisterSlot: () => null,\n    context: {}\n  });\n\n  // maintain a static reference to avoid infinite render loop\n  const defaultContext = Object.freeze({});\n\n  /** Slots uses a Double render strategy inspired by [reach-ui/descendants](https://github.com/reach/reach-ui/tree/develop/packages/descendants)\n   *  Slot registers themself with the Slots parent.\n   *  When all the children have mounted = registered themselves in slot,\n   *  we re-render the parent component to render with slots\n   */\n  const Slots = _ref => {\n    let {\n      context = defaultContext,\n      children\n    } = _ref;\n    // initialise slots\n    const slotsDefinition = {};\n    slotNames.map(name => slotsDefinition[name] = null);\n    const slotsRef = React.useRef(slotsDefinition);\n    const rerenderWithSlots = useForceUpdate();\n    const [isMounted, setIsMounted] = React.useState(false);\n\n    // fires after all the effects in children\n    useIsomorphicLayoutEffect(() => {\n      rerenderWithSlots();\n      setIsMounted(true);\n    }, [rerenderWithSlots]);\n    const registerSlot = React.useCallback((name, contents) => {\n      slotsRef.current[name] = contents;\n\n      // don't render until the component mounts = all slots are registered\n      if (isMounted) rerenderWithSlots();\n    }, [isMounted, rerenderWithSlots]);\n\n    // Slot can be removed from the tree as well,\n    // we need to unregister them from the slot\n    const unregisterSlot = React.useCallback(name => {\n      slotsRef.current[name] = null;\n      rerenderWithSlots();\n    }, [rerenderWithSlots]);\n\n    /**\n     * Slots uses a render prop API so abstract the\n     * implementation detail of using a context provider.\n     */\n    const slots = slotsRef.current;\n    return /*#__PURE__*/React.createElement(SlotsContext.Provider, {\n      value: {\n        registerSlot,\n        unregisterSlot,\n        context\n      }\n    }, children(slots));\n  };\n  const Slot = _ref2 => {\n    let {\n      name,\n      children\n    } = _ref2;\n    const {\n      registerSlot,\n      unregisterSlot,\n      context\n    } = React.useContext(SlotsContext);\n    useIsomorphicLayoutEffect(() => {\n      registerSlot(name, typeof children === 'function' ? children(context) : children);\n      return () => unregisterSlot(name);\n    }, [name, children, registerSlot, unregisterSlot, context]);\n    return null;\n  };\n  return {\n    Slots,\n    Slot\n  };\n};\nexport { createSlots as default };","map":{"version":3,"names":["React","useForceUpdate","useIsomorphicLayoutEffect","createSlots","slotNames","SlotsContext","createContext","registerSlot","unregisterSlot","context","defaultContext","Object","freeze","Slots","children","slotsDefinition","map","name","slotsRef","useRef","rerenderWithSlots","isMounted","setIsMounted","useState","useCallback","contents","current","slots","createElement","Provider","value","Slot","useContext","default"],"sources":["/Users/mohammedalzafarani/Desktop/personalwebsite/node_modules/@primer/react/lib-esm/utils/create-slots.js"],"sourcesContent":["import React from 'react';\nimport { useForceUpdate } from './use-force-update.js';\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect.js';\n\n/** createSlots is a factory that can create a\n *  typesafe Slots + Slot pair to use in a component definition\n *  For example: ActionList.Item uses createSlots to get a Slots wrapper\n *  + Slot component that is used by LeadingVisual, Description\n */\nconst createSlots = slotNames => {\n  const SlotsContext = /*#__PURE__*/React.createContext({\n    registerSlot: () => null,\n    unregisterSlot: () => null,\n    context: {}\n  });\n\n  // maintain a static reference to avoid infinite render loop\n  const defaultContext = Object.freeze({});\n\n  /** Slots uses a Double render strategy inspired by [reach-ui/descendants](https://github.com/reach/reach-ui/tree/develop/packages/descendants)\n   *  Slot registers themself with the Slots parent.\n   *  When all the children have mounted = registered themselves in slot,\n   *  we re-render the parent component to render with slots\n   */\n  const Slots = ({\n    context = defaultContext,\n    children\n  }) => {\n    // initialise slots\n    const slotsDefinition = {};\n    slotNames.map(name => slotsDefinition[name] = null);\n    const slotsRef = React.useRef(slotsDefinition);\n    const rerenderWithSlots = useForceUpdate();\n    const [isMounted, setIsMounted] = React.useState(false);\n\n    // fires after all the effects in children\n    useIsomorphicLayoutEffect(() => {\n      rerenderWithSlots();\n      setIsMounted(true);\n    }, [rerenderWithSlots]);\n    const registerSlot = React.useCallback((name, contents) => {\n      slotsRef.current[name] = contents;\n\n      // don't render until the component mounts = all slots are registered\n      if (isMounted) rerenderWithSlots();\n    }, [isMounted, rerenderWithSlots]);\n\n    // Slot can be removed from the tree as well,\n    // we need to unregister them from the slot\n    const unregisterSlot = React.useCallback(name => {\n      slotsRef.current[name] = null;\n      rerenderWithSlots();\n    }, [rerenderWithSlots]);\n\n    /**\n     * Slots uses a render prop API so abstract the\n     * implementation detail of using a context provider.\n     */\n    const slots = slotsRef.current;\n    return /*#__PURE__*/React.createElement(SlotsContext.Provider, {\n      value: {\n        registerSlot,\n        unregisterSlot,\n        context\n      }\n    }, children(slots));\n  };\n  const Slot = ({\n    name,\n    children\n  }) => {\n    const {\n      registerSlot,\n      unregisterSlot,\n      context\n    } = React.useContext(SlotsContext);\n    useIsomorphicLayoutEffect(() => {\n      registerSlot(name, typeof children === 'function' ? children(context) : children);\n      return () => unregisterSlot(name);\n    }, [name, children, registerSlot, unregisterSlot, context]);\n    return null;\n  };\n  return {\n    Slots,\n    Slot\n  };\n};\n\nexport { createSlots as default };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,uBAAuB;AACtD,OAAOC,yBAAyB,MAAM,gCAAgC;;AAEtE;AACA;AACA;AACA;AACA;AACA,MAAMC,WAAW,GAAGC,SAAS,IAAI;EAC/B,MAAMC,YAAY,GAAG,aAAaL,KAAK,CAACM,aAAa,CAAC;IACpDC,YAAY,EAAE,MAAM,IAAI;IACxBC,cAAc,EAAE,MAAM,IAAI;IAC1BC,OAAO,EAAE,CAAC;EACZ,CAAC,CAAC;;EAEF;EACA,MAAMC,cAAc,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;;EAExC;AACF;AACA;AACA;AACA;EACE,MAAMC,KAAK,GAAG,QAGR;IAAA,IAHS;MACbJ,OAAO,GAAGC,cAAc;MACxBI;IACF,CAAC;IACC;IACA,MAAMC,eAAe,GAAG,CAAC,CAAC;IAC1BX,SAAS,CAACY,GAAG,CAACC,IAAI,IAAIF,eAAe,CAACE,IAAI,CAAC,GAAG,IAAI,CAAC;IACnD,MAAMC,QAAQ,GAAGlB,KAAK,CAACmB,MAAM,CAACJ,eAAe,CAAC;IAC9C,MAAMK,iBAAiB,GAAGnB,cAAc,EAAE;IAC1C,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,KAAK,CAACuB,QAAQ,CAAC,KAAK,CAAC;;IAEvD;IACArB,yBAAyB,CAAC,MAAM;MAC9BkB,iBAAiB,EAAE;MACnBE,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,EAAE,CAACF,iBAAiB,CAAC,CAAC;IACvB,MAAMb,YAAY,GAAGP,KAAK,CAACwB,WAAW,CAAC,CAACP,IAAI,EAAEQ,QAAQ,KAAK;MACzDP,QAAQ,CAACQ,OAAO,CAACT,IAAI,CAAC,GAAGQ,QAAQ;;MAEjC;MACA,IAAIJ,SAAS,EAAED,iBAAiB,EAAE;IACpC,CAAC,EAAE,CAACC,SAAS,EAAED,iBAAiB,CAAC,CAAC;;IAElC;IACA;IACA,MAAMZ,cAAc,GAAGR,KAAK,CAACwB,WAAW,CAACP,IAAI,IAAI;MAC/CC,QAAQ,CAACQ,OAAO,CAACT,IAAI,CAAC,GAAG,IAAI;MAC7BG,iBAAiB,EAAE;IACrB,CAAC,EAAE,CAACA,iBAAiB,CAAC,CAAC;;IAEvB;AACJ;AACA;AACA;IACI,MAAMO,KAAK,GAAGT,QAAQ,CAACQ,OAAO;IAC9B,OAAO,aAAa1B,KAAK,CAAC4B,aAAa,CAACvB,YAAY,CAACwB,QAAQ,EAAE;MAC7DC,KAAK,EAAE;QACLvB,YAAY;QACZC,cAAc;QACdC;MACF;IACF,CAAC,EAAEK,QAAQ,CAACa,KAAK,CAAC,CAAC;EACrB,CAAC;EACD,MAAMI,IAAI,GAAG,SAGP;IAAA,IAHQ;MACZd,IAAI;MACJH;IACF,CAAC;IACC,MAAM;MACJP,YAAY;MACZC,cAAc;MACdC;IACF,CAAC,GAAGT,KAAK,CAACgC,UAAU,CAAC3B,YAAY,CAAC;IAClCH,yBAAyB,CAAC,MAAM;MAC9BK,YAAY,CAACU,IAAI,EAAE,OAAOH,QAAQ,KAAK,UAAU,GAAGA,QAAQ,CAACL,OAAO,CAAC,GAAGK,QAAQ,CAAC;MACjF,OAAO,MAAMN,cAAc,CAACS,IAAI,CAAC;IACnC,CAAC,EAAE,CAACA,IAAI,EAAEH,QAAQ,EAAEP,YAAY,EAAEC,cAAc,EAAEC,OAAO,CAAC,CAAC;IAC3D,OAAO,IAAI;EACb,CAAC;EACD,OAAO;IACLI,KAAK;IACLkB;EACF,CAAC;AACH,CAAC;AAED,SAAS5B,WAAW,IAAI8B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}