{"ast":null,"code":"import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport Box from '../Box.js';\nimport { useRefObjectAsForwardedRef } from '../hooks/useRefObjectAsForwardedRef.js';\nimport { isResponsiveValue, useResponsiveValue } from '../hooks/useResponsiveValue.js';\nimport '../sx.js';\nimport createSlots from '../utils/create-slots.js';\nimport { canUseDOM } from '../utils/environment.js';\nimport { useStickyPaneHeight } from './useStickyPaneHeight.js';\nimport merge from 'deepmerge';\nconst {\n  Slots,\n  Slot\n} = createSlots(['Header', 'Footer']);\nconst REGION_ORDER = {\n  header: 0,\n  paneStart: 1,\n  content: 2,\n  paneEnd: 3,\n  footer: 4\n};\nconst SPACING_MAP = {\n  none: 0,\n  condensed: 3,\n  normal: [3, null, null, 4]\n};\nconst PageLayoutContext = /*#__PURE__*/React.createContext({\n  padding: 'normal',\n  rowGap: 'normal',\n  columnGap: 'normal'\n});\n\n// ----------------------------------------------------------------------------\n// PageLayout\n\nconst containerWidths = {\n  full: '100%',\n  medium: '768px',\n  large: '1012px',\n  xlarge: '1280px'\n};\n\n// TODO: refs\nconst Root = _ref => {\n  let {\n    containerWidth = 'xlarge',\n    padding = 'normal',\n    rowGap = 'normal',\n    columnGap = 'normal',\n    children,\n    sx = {}\n  } = _ref;\n  const {\n    rootRef,\n    enableStickyPane,\n    disableStickyPane,\n    contentTopRef,\n    contentBottomRef,\n    stickyPaneHeight\n  } = useStickyPaneHeight();\n  return /*#__PURE__*/React.createElement(PageLayoutContext.Provider, {\n    value: {\n      padding,\n      rowGap,\n      columnGap,\n      enableStickyPane,\n      disableStickyPane,\n      contentTopRef,\n      contentBottomRef\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    ref: rootRef,\n    style: {\n      // @ts-ignore TypeScript doesn't know about CSS custom properties\n      '--sticky-pane-height': stickyPaneHeight\n    },\n    sx: merge({\n      padding: SPACING_MAP[padding]\n    }, sx)\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      maxWidth: containerWidths[containerWidth],\n      marginX: 'auto',\n      display: 'flex',\n      flexWrap: 'wrap'\n    }\n  }, /*#__PURE__*/React.createElement(Slots, null, slots => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, slots.Header, /*#__PURE__*/React.createElement(Box, {\n      sx: {\n        display: 'flex',\n        flex: '1 1 100%',\n        flexWrap: 'wrap',\n        maxWidth: '100%'\n      }\n    }, children), slots.Footer);\n  }))));\n};\nRoot.displayName = \"Root\";\nRoot.displayName = 'PageLayout';\n\n// ----------------------------------------------------------------------------\n// Divider (internal)\n\nconst horizontalDividerVariants = {\n  none: {\n    display: 'none'\n  },\n  line: {\n    display: 'block',\n    height: 1,\n    backgroundColor: 'border.default'\n  },\n  filled: {\n    display: 'block',\n    height: 8,\n    backgroundColor: 'canvas.inset',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    boxShadow: theme => `inset 0 -1px 0 0 ${theme.colors.border.default}, inset 0 1px 0 0 ${theme.colors.border.default}`\n  }\n};\nfunction negateSpacingValue(value) {\n  if (Array.isArray(value)) {\n    // Not using recursion to avoid deeply nested arrays\n    return value.map(v => v === null ? null : -v);\n  }\n  return value === null ? null : -value;\n}\nconst HorizontalDivider = _ref2 => {\n  let {\n    variant = 'none',\n    sx = {}\n  } = _ref2;\n  const {\n    padding\n  } = React.useContext(PageLayoutContext);\n  const responsiveVariant = useResponsiveValue(variant, 'none');\n  return /*#__PURE__*/React.createElement(Box\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  , {\n    sx: theme => merge({\n      // Stretch divider to viewport edges on narrow screens\n      marginX: negateSpacingValue(SPACING_MAP[padding]),\n      ...horizontalDividerVariants[responsiveVariant],\n      [`@media screen and (min-width: ${theme.breakpoints[1]})`]: {\n        marginX: '0 !important'\n      }\n    }, sx)\n  });\n};\nHorizontalDivider.displayName = \"HorizontalDivider\";\nconst verticalDividerVariants = {\n  none: {\n    display: 'none'\n  },\n  line: {\n    display: 'block',\n    width: 1,\n    backgroundColor: 'border.default'\n  },\n  filled: {\n    display: 'block',\n    width: 8,\n    backgroundColor: 'canvas.inset',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    boxShadow: theme => `inset -1px 0 0 0 ${theme.colors.border.default}, inset 1px 0 0 0 ${theme.colors.border.default}`\n  }\n};\nconst DraggingGlobalStyles = createGlobalStyle([\"body[data-page-layout-dragging=\\\"true\\\"]{cursor:col-resize;}body[data-page-layout-dragging=\\\"true\\\"] *{user-select:none;}\"]);\nconst VerticalDivider = _ref3 => {\n  let {\n    variant = 'none',\n    draggable = false,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    onDoubleClick,\n    sx = {}\n  } = _ref3;\n  const [isDragging, setIsDragging] = React.useState(false);\n  const responsiveVariant = useResponsiveValue(variant, 'none');\n  const stableOnDrag = React.useRef(onDrag);\n  const stableOnDragEnd = React.useRef(onDragEnd);\n  React.useEffect(() => {\n    stableOnDrag.current = onDrag;\n  }, [onDrag]);\n  React.useEffect(() => {\n    stableOnDragEnd.current = onDragEnd;\n  }, [onDragEnd]);\n  React.useEffect(() => {\n    function handleDrag(event) {\n      var _stableOnDrag$current;\n      (_stableOnDrag$current = stableOnDrag.current) === null || _stableOnDrag$current === void 0 ? void 0 : _stableOnDrag$current.call(stableOnDrag, event.movementX);\n      event.preventDefault();\n    }\n    function handleDragEnd(event) {\n      var _stableOnDragEnd$curr;\n      setIsDragging(false);\n      (_stableOnDragEnd$curr = stableOnDragEnd.current) === null || _stableOnDragEnd$curr === void 0 ? void 0 : _stableOnDragEnd$curr.call(stableOnDragEnd);\n      event.preventDefault();\n    }\n\n    // TODO: Support touch events\n    if (isDragging) {\n      window.addEventListener('mousemove', handleDrag);\n      window.addEventListener('mouseup', handleDragEnd);\n      document.body.setAttribute('data-page-layout-dragging', 'true');\n    } else {\n      window.removeEventListener('mousemove', handleDrag);\n      window.removeEventListener('mouseup', handleDragEnd);\n      document.body.removeAttribute('data-page-layout-dragging');\n    }\n    return () => {\n      window.removeEventListener('mousemove', handleDrag);\n      window.removeEventListener('mouseup', handleDragEnd);\n      document.body.removeAttribute('data-page-layout-dragging');\n    };\n  }, [isDragging]);\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: merge({\n      height: '100%',\n      position: 'relative',\n      ...verticalDividerVariants[responsiveVariant]\n    }, sx)\n  }, draggable ? /*#__PURE__*/\n  // Drag handle\n  React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      position: 'absolute',\n      inset: '0 -2px',\n      cursor: 'col-resize',\n      bg: isDragging ? 'accent.fg' : 'transparent',\n      transitionDelay: '0.1s',\n      '&:hover': {\n        bg: isDragging ? 'accent.fg' : 'neutral.muted'\n      }\n    },\n    onMouseDown: () => {\n      setIsDragging(true);\n      onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart();\n    },\n    onDoubleClick: onDoubleClick\n  }), /*#__PURE__*/React.createElement(DraggingGlobalStyles, null)) : null);\n};\nVerticalDivider.displayName = \"VerticalDivider\";\nconst Header = _ref4 => {\n  let {\n    'aria-label': label,\n    'aria-labelledby': labelledBy,\n    padding = 'none',\n    divider = 'none',\n    dividerWhenNarrow = 'inherit',\n    hidden = false,\n    children,\n    sx = {}\n  } = _ref4;\n  // Combine divider and dividerWhenNarrow for backwards compatibility\n  const dividerProp = !isResponsiveValue(divider) && dividerWhenNarrow !== 'inherit' ? {\n    regular: divider,\n    narrow: dividerWhenNarrow\n  } : divider;\n  const dividerVariant = useResponsiveValue(dividerProp, 'none');\n  const isHidden = useResponsiveValue(hidden, false);\n  const {\n    rowGap\n  } = React.useContext(PageLayoutContext);\n  return /*#__PURE__*/React.createElement(Slot, {\n    name: \"Header\"\n  }, /*#__PURE__*/React.createElement(Box, {\n    as: \"header\",\n    \"aria-label\": label,\n    \"aria-labelledby\": labelledBy,\n    hidden: isHidden,\n    sx: merge({\n      width: '100%',\n      marginBottom: SPACING_MAP[rowGap]\n    }, sx)\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      padding: SPACING_MAP[padding]\n    }\n  }, children), /*#__PURE__*/React.createElement(HorizontalDivider, {\n    variant: dividerVariant,\n    sx: {\n      marginTop: SPACING_MAP[rowGap]\n    }\n  })));\n};\nHeader.displayName = \"Header\";\nHeader.displayName = 'PageLayout.Header';\n\n// ----------------------------------------------------------------------------\n// PageLayout.Content\n\n// TODO: Account for pane width when centering content\nconst contentWidths = {\n  full: '100%',\n  medium: '768px',\n  large: '1012px',\n  xlarge: '1280px'\n};\nconst Content = _ref5 => {\n  let {\n    'aria-label': label,\n    'aria-labelledby': labelledBy,\n    width = 'full',\n    padding = 'none',\n    hidden = false,\n    children,\n    sx = {}\n  } = _ref5;\n  const isHidden = useResponsiveValue(hidden, false);\n  const {\n    contentTopRef,\n    contentBottomRef\n  } = React.useContext(PageLayoutContext);\n  return /*#__PURE__*/React.createElement(Box, {\n    as: \"main\",\n    \"aria-label\": label,\n    \"aria-labelledby\": labelledBy,\n    sx: merge({\n      display: isHidden ? 'none' : 'flex',\n      flexDirection: 'column',\n      order: REGION_ORDER.content,\n      // Set flex-basis to 0% to allow flex-grow to control the width of the content region.\n      // Without this, the content region could wrap onto a different line\n      // than the pane region on wide viewports if its contents are too wide.\n      flexBasis: 0,\n      flexGrow: 1,\n      flexShrink: 1,\n      minWidth: 1 // Hack to prevent overflowing content from pushing the pane region to the next line\n    }, sx)\n  }, /*#__PURE__*/React.createElement(Box, {\n    ref: contentTopRef\n  }), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      width: '100%',\n      maxWidth: contentWidths[width],\n      marginX: 'auto',\n      flexGrow: 1,\n      padding: SPACING_MAP[padding]\n    }\n  }, children), /*#__PURE__*/React.createElement(Box, {\n    ref: contentBottomRef\n  }));\n};\nContent.displayName = \"Content\";\nContent.displayName = 'PageLayout.Content';\n\n// ----------------------------------------------------------------------------\n// PageLayout.Pane\n\nconst panePositions = {\n  start: REGION_ORDER.paneStart,\n  end: REGION_ORDER.paneEnd\n};\nconst paneWidths = {\n  small: ['100%', null, '240px', '256px'],\n  medium: ['100%', null, '256px', '296px'],\n  large: ['100%', null, '256px', '320px', '336px']\n};\nconst defaultPaneWidth = {\n  small: 256,\n  medium: 296,\n  large: 320\n};\nconst Pane = /*#__PURE__*/React.forwardRef((_ref6, forwardRef) => {\n  let {\n    position: responsivePosition = 'end',\n    positionWhenNarrow = 'inherit',\n    width = 'medium',\n    padding = 'none',\n    resizable = false,\n    widthStorageKey = 'paneWidth',\n    divider: responsiveDivider = 'none',\n    dividerWhenNarrow = 'inherit',\n    sticky = false,\n    offsetHeader = 0,\n    hidden: responsiveHidden = false,\n    children,\n    sx = {}\n  } = _ref6;\n  // Combine position and positionWhenNarrow for backwards compatibility\n  const positionProp = !isResponsiveValue(responsivePosition) && positionWhenNarrow !== 'inherit' ? {\n    regular: responsivePosition,\n    narrow: positionWhenNarrow\n  } : responsivePosition;\n  const position = useResponsiveValue(positionProp, 'end');\n\n  // Combine divider and dividerWhenNarrow for backwards compatibility\n  const dividerProp = !isResponsiveValue(responsiveDivider) && dividerWhenNarrow !== 'inherit' ? {\n    regular: responsiveDivider,\n    narrow: dividerWhenNarrow\n  } : responsiveDivider;\n  const dividerVariant = useResponsiveValue(dividerProp, 'none');\n  const isHidden = useResponsiveValue(responsiveHidden, false);\n  const {\n    rowGap,\n    columnGap,\n    enableStickyPane,\n    disableStickyPane\n  } = React.useContext(PageLayoutContext);\n  React.useEffect(() => {\n    if (sticky) {\n      enableStickyPane === null || enableStickyPane === void 0 ? void 0 : enableStickyPane(offsetHeader);\n    } else {\n      disableStickyPane === null || disableStickyPane === void 0 ? void 0 : disableStickyPane();\n    }\n  }, [sticky, enableStickyPane, disableStickyPane, offsetHeader]);\n  const [paneWidth, setPaneWidth] = React.useState(() => {\n    if (!canUseDOM) {\n      return defaultPaneWidth[width];\n    }\n    let storedWidth;\n    try {\n      storedWidth = localStorage.getItem(widthStorageKey);\n    } catch (error) {\n      storedWidth = null;\n    }\n    return storedWidth && !isNaN(Number(storedWidth)) ? Number(storedWidth) : defaultPaneWidth[width];\n  });\n  const updatePaneWidth = width => {\n    setPaneWidth(width);\n    try {\n      localStorage.setItem(widthStorageKey, width.toString());\n    } catch (error) {\n      // Ignore errors\n    }\n  };\n  const paneRef = React.useRef(null);\n  useRefObjectAsForwardedRef(forwardRef, paneRef);\n  return /*#__PURE__*/React.createElement(Box\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  , {\n    sx: theme => merge({\n      // Narrow viewports\n      display: isHidden ? 'none' : 'flex',\n      order: panePositions[position],\n      width: '100%',\n      marginX: 0,\n      ...(position === 'end' ? {\n        flexDirection: 'column',\n        marginTop: SPACING_MAP[rowGap]\n      } : {\n        flexDirection: 'column-reverse',\n        marginBottom: SPACING_MAP[rowGap]\n      }),\n      // Regular and wide viewports\n      [`@media screen and (min-width: ${theme.breakpoints[1]})`]: {\n        width: 'auto',\n        marginY: '0 !important',\n        ...(sticky ? {\n          position: 'sticky',\n          // If offsetHeader has value, it will stick the pane to the position where the sticky top ends\n          // else top will be 0 as the default value of offsetHeader\n          top: typeof offsetHeader === 'number' ? `${offsetHeader}px` : offsetHeader,\n          maxHeight: 'var(--sticky-pane-height)'\n        } : {}),\n        ...(position === 'end' ? {\n          flexDirection: 'row',\n          marginLeft: SPACING_MAP[columnGap]\n        } : {\n          flexDirection: 'row-reverse',\n          marginRight: SPACING_MAP[columnGap]\n        })\n      }\n    }, sx)\n  }, /*#__PURE__*/React.createElement(HorizontalDivider, {\n    variant: {\n      narrow: dividerVariant,\n      regular: 'none'\n    },\n    sx: {\n      [position === 'end' ? 'marginBottom' : 'marginTop']: SPACING_MAP[rowGap]\n    }\n  }), /*#__PURE__*/React.createElement(VerticalDivider, {\n    variant: {\n      narrow: 'none',\n      // If pane is resizable, always show a vertical divider on regular viewports\n      regular: resizable ? 'line' : dividerVariant\n    }\n    // If pane is resizable, the divider should be draggable\n    ,\n\n    draggable: resizable,\n    sx: {\n      [position === 'end' ? 'marginRight' : 'marginLeft']: SPACING_MAP[columnGap]\n    },\n    onDrag: delta => {\n      // Get the number of pixels the divider was dragged\n      const deltaWithDirection = position === 'end' ? -delta : delta;\n      updatePaneWidth(paneWidth + deltaWithDirection);\n    }\n    // Ensure `paneWidth` state and actual pane width are in sync when the drag ends\n    ,\n\n    onDragEnd: () => {\n      var _paneRef$current;\n      const paneRect = (_paneRef$current = paneRef.current) === null || _paneRef$current === void 0 ? void 0 : _paneRef$current.getBoundingClientRect();\n      if (!paneRect) return;\n      updatePaneWidth(paneRect.width);\n    }\n    // Reset pane width on double click\n    ,\n\n    onDoubleClick: () => updatePaneWidth(defaultPaneWidth[width])\n  }), /*#__PURE__*/React.createElement(Box, {\n    ref: paneRef,\n    style: {\n      // @ts-ignore CSS custom properties are not supported by TypeScript\n      '--pane-width': `${paneWidth}px`\n    },\n    sx: theme => ({\n      '--pane-min-width': `256px`,\n      '--pane-max-width': `calc(100vw - 511px)`,\n      width: resizable ? ['100%', null, 'clamp(var(--pane-min-width), var(--pane-width), var(--pane-max-width))'] : paneWidths[width],\n      padding: SPACING_MAP[padding],\n      [`@media screen and (min-width: ${theme.breakpoints[1]})`]: {\n        overflow: 'auto'\n      },\n      [`@media screen and (min-width: ${theme.breakpoints[3]})`]: {\n        '--pane-max-width': 'calc(100vw - 959px)'\n      }\n    })\n  }, children));\n});\nPane.displayName = 'PageLayout.Pane';\n\n// ----------------------------------------------------------------------------\n// PageLayout.Footer\n\nconst Footer = _ref7 => {\n  let {\n    'aria-label': label,\n    'aria-labelledby': labelledBy,\n    padding = 'none',\n    divider = 'none',\n    dividerWhenNarrow = 'inherit',\n    hidden = false,\n    children,\n    sx = {}\n  } = _ref7;\n  // Combine divider and dividerWhenNarrow for backwards compatibility\n  const dividerProp = !isResponsiveValue(divider) && dividerWhenNarrow !== 'inherit' ? {\n    regular: divider,\n    narrow: dividerWhenNarrow\n  } : divider;\n  const dividerVariant = useResponsiveValue(dividerProp, 'none');\n  const isHidden = useResponsiveValue(hidden, false);\n  const {\n    rowGap\n  } = React.useContext(PageLayoutContext);\n  return /*#__PURE__*/React.createElement(Slot, {\n    name: \"Footer\"\n  }, /*#__PURE__*/React.createElement(Box, {\n    as: \"footer\",\n    \"aria-label\": label,\n    \"aria-labelledby\": labelledBy,\n    hidden: isHidden,\n    sx: merge({\n      order: REGION_ORDER.footer,\n      width: '100%',\n      marginTop: SPACING_MAP[rowGap]\n    }, sx)\n  }, /*#__PURE__*/React.createElement(HorizontalDivider, {\n    variant: dividerVariant,\n    sx: {\n      marginBottom: SPACING_MAP[rowGap]\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      padding: SPACING_MAP[padding]\n    }\n  }, children)));\n};\nFooter.displayName = \"Footer\";\nFooter.displayName = 'PageLayout.Footer';\n\n// ----------------------------------------------------------------------------\n// Export\n\nconst PageLayout = Object.assign(Root, {\n  Header,\n  Content,\n  Pane,\n  Footer\n});\nexport { PageLayout };","map":{"version":3,"names":["React","createGlobalStyle","Box","useRefObjectAsForwardedRef","isResponsiveValue","useResponsiveValue","createSlots","canUseDOM","useStickyPaneHeight","merge","Slots","Slot","REGION_ORDER","header","paneStart","content","paneEnd","footer","SPACING_MAP","none","condensed","normal","PageLayoutContext","createContext","padding","rowGap","columnGap","containerWidths","full","medium","large","xlarge","Root","containerWidth","children","sx","rootRef","enableStickyPane","disableStickyPane","contentTopRef","contentBottomRef","stickyPaneHeight","createElement","Provider","value","ref","style","maxWidth","marginX","display","flexWrap","slots","Fragment","Header","flex","Footer","displayName","horizontalDividerVariants","line","height","backgroundColor","filled","boxShadow","theme","colors","border","default","negateSpacingValue","Array","isArray","map","v","HorizontalDivider","variant","useContext","responsiveVariant","breakpoints","verticalDividerVariants","width","DraggingGlobalStyles","VerticalDivider","draggable","onDragStart","onDrag","onDragEnd","onDoubleClick","isDragging","setIsDragging","useState","stableOnDrag","useRef","stableOnDragEnd","useEffect","current","handleDrag","event","_stableOnDrag$current","call","movementX","preventDefault","handleDragEnd","_stableOnDragEnd$curr","window","addEventListener","document","body","setAttribute","removeEventListener","removeAttribute","position","inset","cursor","bg","transitionDelay","onMouseDown","label","labelledBy","divider","dividerWhenNarrow","hidden","dividerProp","regular","narrow","dividerVariant","isHidden","name","as","marginBottom","marginTop","contentWidths","Content","flexDirection","order","flexBasis","flexGrow","flexShrink","minWidth","panePositions","start","end","paneWidths","small","defaultPaneWidth","Pane","forwardRef","responsivePosition","positionWhenNarrow","resizable","widthStorageKey","responsiveDivider","sticky","offsetHeader","responsiveHidden","positionProp","paneWidth","setPaneWidth","storedWidth","localStorage","getItem","error","isNaN","Number","updatePaneWidth","setItem","toString","paneRef","marginY","top","maxHeight","marginLeft","marginRight","delta","deltaWithDirection","_paneRef$current","paneRect","getBoundingClientRect","overflow","PageLayout","Object","assign"],"sources":["/Users/mohammedalzafarani/Desktop/personalwebsite/node_modules/@primer/react/lib-esm/PageLayout/PageLayout.js"],"sourcesContent":["import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport Box from '../Box.js';\nimport { useRefObjectAsForwardedRef } from '../hooks/useRefObjectAsForwardedRef.js';\nimport { isResponsiveValue, useResponsiveValue } from '../hooks/useResponsiveValue.js';\nimport '../sx.js';\nimport createSlots from '../utils/create-slots.js';\nimport { canUseDOM } from '../utils/environment.js';\nimport { useStickyPaneHeight } from './useStickyPaneHeight.js';\nimport merge from 'deepmerge';\n\nconst {\n  Slots,\n  Slot\n} = createSlots(['Header', 'Footer']);\nconst REGION_ORDER = {\n  header: 0,\n  paneStart: 1,\n  content: 2,\n  paneEnd: 3,\n  footer: 4\n};\nconst SPACING_MAP = {\n  none: 0,\n  condensed: 3,\n  normal: [3, null, null, 4]\n};\nconst PageLayoutContext = /*#__PURE__*/React.createContext({\n  padding: 'normal',\n  rowGap: 'normal',\n  columnGap: 'normal'\n});\n\n// ----------------------------------------------------------------------------\n// PageLayout\n\nconst containerWidths = {\n  full: '100%',\n  medium: '768px',\n  large: '1012px',\n  xlarge: '1280px'\n};\n\n// TODO: refs\nconst Root = ({\n  containerWidth = 'xlarge',\n  padding = 'normal',\n  rowGap = 'normal',\n  columnGap = 'normal',\n  children,\n  sx = {}\n}) => {\n  const {\n    rootRef,\n    enableStickyPane,\n    disableStickyPane,\n    contentTopRef,\n    contentBottomRef,\n    stickyPaneHeight\n  } = useStickyPaneHeight();\n  return /*#__PURE__*/React.createElement(PageLayoutContext.Provider, {\n    value: {\n      padding,\n      rowGap,\n      columnGap,\n      enableStickyPane,\n      disableStickyPane,\n      contentTopRef,\n      contentBottomRef\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    ref: rootRef,\n    style: {\n      // @ts-ignore TypeScript doesn't know about CSS custom properties\n      '--sticky-pane-height': stickyPaneHeight\n    },\n    sx: merge({\n      padding: SPACING_MAP[padding]\n    }, sx)\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      maxWidth: containerWidths[containerWidth],\n      marginX: 'auto',\n      display: 'flex',\n      flexWrap: 'wrap'\n    }\n  }, /*#__PURE__*/React.createElement(Slots, null, slots => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, slots.Header, /*#__PURE__*/React.createElement(Box, {\n      sx: {\n        display: 'flex',\n        flex: '1 1 100%',\n        flexWrap: 'wrap',\n        maxWidth: '100%'\n      }\n    }, children), slots.Footer);\n  }))));\n};\nRoot.displayName = \"Root\";\nRoot.displayName = 'PageLayout';\n\n// ----------------------------------------------------------------------------\n// Divider (internal)\n\nconst horizontalDividerVariants = {\n  none: {\n    display: 'none'\n  },\n  line: {\n    display: 'block',\n    height: 1,\n    backgroundColor: 'border.default'\n  },\n  filled: {\n    display: 'block',\n    height: 8,\n    backgroundColor: 'canvas.inset',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    boxShadow: theme => `inset 0 -1px 0 0 ${theme.colors.border.default}, inset 0 1px 0 0 ${theme.colors.border.default}`\n  }\n};\nfunction negateSpacingValue(value) {\n  if (Array.isArray(value)) {\n    // Not using recursion to avoid deeply nested arrays\n    return value.map(v => v === null ? null : -v);\n  }\n  return value === null ? null : -value;\n}\nconst HorizontalDivider = ({\n  variant = 'none',\n  sx = {}\n}) => {\n  const {\n    padding\n  } = React.useContext(PageLayoutContext);\n  const responsiveVariant = useResponsiveValue(variant, 'none');\n  return /*#__PURE__*/React.createElement(Box\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  , {\n    sx: theme => merge({\n      // Stretch divider to viewport edges on narrow screens\n      marginX: negateSpacingValue(SPACING_MAP[padding]),\n      ...horizontalDividerVariants[responsiveVariant],\n      [`@media screen and (min-width: ${theme.breakpoints[1]})`]: {\n        marginX: '0 !important'\n      }\n    }, sx)\n  });\n};\nHorizontalDivider.displayName = \"HorizontalDivider\";\nconst verticalDividerVariants = {\n  none: {\n    display: 'none'\n  },\n  line: {\n    display: 'block',\n    width: 1,\n    backgroundColor: 'border.default'\n  },\n  filled: {\n    display: 'block',\n    width: 8,\n    backgroundColor: 'canvas.inset',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    boxShadow: theme => `inset -1px 0 0 0 ${theme.colors.border.default}, inset 1px 0 0 0 ${theme.colors.border.default}`\n  }\n};\nconst DraggingGlobalStyles = createGlobalStyle([\"body[data-page-layout-dragging=\\\"true\\\"]{cursor:col-resize;}body[data-page-layout-dragging=\\\"true\\\"] *{user-select:none;}\"]);\nconst VerticalDivider = ({\n  variant = 'none',\n  draggable = false,\n  onDragStart,\n  onDrag,\n  onDragEnd,\n  onDoubleClick,\n  sx = {}\n}) => {\n  const [isDragging, setIsDragging] = React.useState(false);\n  const responsiveVariant = useResponsiveValue(variant, 'none');\n  const stableOnDrag = React.useRef(onDrag);\n  const stableOnDragEnd = React.useRef(onDragEnd);\n  React.useEffect(() => {\n    stableOnDrag.current = onDrag;\n  }, [onDrag]);\n  React.useEffect(() => {\n    stableOnDragEnd.current = onDragEnd;\n  }, [onDragEnd]);\n  React.useEffect(() => {\n    function handleDrag(event) {\n      var _stableOnDrag$current;\n      (_stableOnDrag$current = stableOnDrag.current) === null || _stableOnDrag$current === void 0 ? void 0 : _stableOnDrag$current.call(stableOnDrag, event.movementX);\n      event.preventDefault();\n    }\n    function handleDragEnd(event) {\n      var _stableOnDragEnd$curr;\n      setIsDragging(false);\n      (_stableOnDragEnd$curr = stableOnDragEnd.current) === null || _stableOnDragEnd$curr === void 0 ? void 0 : _stableOnDragEnd$curr.call(stableOnDragEnd);\n      event.preventDefault();\n    }\n\n    // TODO: Support touch events\n    if (isDragging) {\n      window.addEventListener('mousemove', handleDrag);\n      window.addEventListener('mouseup', handleDragEnd);\n      document.body.setAttribute('data-page-layout-dragging', 'true');\n    } else {\n      window.removeEventListener('mousemove', handleDrag);\n      window.removeEventListener('mouseup', handleDragEnd);\n      document.body.removeAttribute('data-page-layout-dragging');\n    }\n    return () => {\n      window.removeEventListener('mousemove', handleDrag);\n      window.removeEventListener('mouseup', handleDragEnd);\n      document.body.removeAttribute('data-page-layout-dragging');\n    };\n  }, [isDragging]);\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: merge({\n      height: '100%',\n      position: 'relative',\n      ...verticalDividerVariants[responsiveVariant]\n    }, sx)\n  }, draggable ?\n  /*#__PURE__*/\n  // Drag handle\n  React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      position: 'absolute',\n      inset: '0 -2px',\n      cursor: 'col-resize',\n      bg: isDragging ? 'accent.fg' : 'transparent',\n      transitionDelay: '0.1s',\n      '&:hover': {\n        bg: isDragging ? 'accent.fg' : 'neutral.muted'\n      }\n    },\n    onMouseDown: () => {\n      setIsDragging(true);\n      onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart();\n    },\n    onDoubleClick: onDoubleClick\n  }), /*#__PURE__*/React.createElement(DraggingGlobalStyles, null)) : null);\n};\nVerticalDivider.displayName = \"VerticalDivider\";\nconst Header = ({\n  'aria-label': label,\n  'aria-labelledby': labelledBy,\n  padding = 'none',\n  divider = 'none',\n  dividerWhenNarrow = 'inherit',\n  hidden = false,\n  children,\n  sx = {}\n}) => {\n  // Combine divider and dividerWhenNarrow for backwards compatibility\n  const dividerProp = !isResponsiveValue(divider) && dividerWhenNarrow !== 'inherit' ? {\n    regular: divider,\n    narrow: dividerWhenNarrow\n  } : divider;\n  const dividerVariant = useResponsiveValue(dividerProp, 'none');\n  const isHidden = useResponsiveValue(hidden, false);\n  const {\n    rowGap\n  } = React.useContext(PageLayoutContext);\n  return /*#__PURE__*/React.createElement(Slot, {\n    name: \"Header\"\n  }, /*#__PURE__*/React.createElement(Box, {\n    as: \"header\",\n    \"aria-label\": label,\n    \"aria-labelledby\": labelledBy,\n    hidden: isHidden,\n    sx: merge({\n      width: '100%',\n      marginBottom: SPACING_MAP[rowGap]\n    }, sx)\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      padding: SPACING_MAP[padding]\n    }\n  }, children), /*#__PURE__*/React.createElement(HorizontalDivider, {\n    variant: dividerVariant,\n    sx: {\n      marginTop: SPACING_MAP[rowGap]\n    }\n  })));\n};\nHeader.displayName = \"Header\";\nHeader.displayName = 'PageLayout.Header';\n\n// ----------------------------------------------------------------------------\n// PageLayout.Content\n\n// TODO: Account for pane width when centering content\nconst contentWidths = {\n  full: '100%',\n  medium: '768px',\n  large: '1012px',\n  xlarge: '1280px'\n};\nconst Content = ({\n  'aria-label': label,\n  'aria-labelledby': labelledBy,\n  width = 'full',\n  padding = 'none',\n  hidden = false,\n  children,\n  sx = {}\n}) => {\n  const isHidden = useResponsiveValue(hidden, false);\n  const {\n    contentTopRef,\n    contentBottomRef\n  } = React.useContext(PageLayoutContext);\n  return /*#__PURE__*/React.createElement(Box, {\n    as: \"main\",\n    \"aria-label\": label,\n    \"aria-labelledby\": labelledBy,\n    sx: merge({\n      display: isHidden ? 'none' : 'flex',\n      flexDirection: 'column',\n      order: REGION_ORDER.content,\n      // Set flex-basis to 0% to allow flex-grow to control the width of the content region.\n      // Without this, the content region could wrap onto a different line\n      // than the pane region on wide viewports if its contents are too wide.\n      flexBasis: 0,\n      flexGrow: 1,\n      flexShrink: 1,\n      minWidth: 1 // Hack to prevent overflowing content from pushing the pane region to the next line\n    }, sx)\n  }, /*#__PURE__*/React.createElement(Box, {\n    ref: contentTopRef\n  }), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      width: '100%',\n      maxWidth: contentWidths[width],\n      marginX: 'auto',\n      flexGrow: 1,\n      padding: SPACING_MAP[padding]\n    }\n  }, children), /*#__PURE__*/React.createElement(Box, {\n    ref: contentBottomRef\n  }));\n};\nContent.displayName = \"Content\";\nContent.displayName = 'PageLayout.Content';\n\n// ----------------------------------------------------------------------------\n// PageLayout.Pane\n\nconst panePositions = {\n  start: REGION_ORDER.paneStart,\n  end: REGION_ORDER.paneEnd\n};\nconst paneWidths = {\n  small: ['100%', null, '240px', '256px'],\n  medium: ['100%', null, '256px', '296px'],\n  large: ['100%', null, '256px', '320px', '336px']\n};\nconst defaultPaneWidth = {\n  small: 256,\n  medium: 296,\n  large: 320\n};\nconst Pane = /*#__PURE__*/React.forwardRef(({\n  position: responsivePosition = 'end',\n  positionWhenNarrow = 'inherit',\n  width = 'medium',\n  padding = 'none',\n  resizable = false,\n  widthStorageKey = 'paneWidth',\n  divider: responsiveDivider = 'none',\n  dividerWhenNarrow = 'inherit',\n  sticky = false,\n  offsetHeader = 0,\n  hidden: responsiveHidden = false,\n  children,\n  sx = {}\n}, forwardRef) => {\n  // Combine position and positionWhenNarrow for backwards compatibility\n  const positionProp = !isResponsiveValue(responsivePosition) && positionWhenNarrow !== 'inherit' ? {\n    regular: responsivePosition,\n    narrow: positionWhenNarrow\n  } : responsivePosition;\n  const position = useResponsiveValue(positionProp, 'end');\n\n  // Combine divider and dividerWhenNarrow for backwards compatibility\n  const dividerProp = !isResponsiveValue(responsiveDivider) && dividerWhenNarrow !== 'inherit' ? {\n    regular: responsiveDivider,\n    narrow: dividerWhenNarrow\n  } : responsiveDivider;\n  const dividerVariant = useResponsiveValue(dividerProp, 'none');\n  const isHidden = useResponsiveValue(responsiveHidden, false);\n  const {\n    rowGap,\n    columnGap,\n    enableStickyPane,\n    disableStickyPane\n  } = React.useContext(PageLayoutContext);\n  React.useEffect(() => {\n    if (sticky) {\n      enableStickyPane === null || enableStickyPane === void 0 ? void 0 : enableStickyPane(offsetHeader);\n    } else {\n      disableStickyPane === null || disableStickyPane === void 0 ? void 0 : disableStickyPane();\n    }\n  }, [sticky, enableStickyPane, disableStickyPane, offsetHeader]);\n  const [paneWidth, setPaneWidth] = React.useState(() => {\n    if (!canUseDOM) {\n      return defaultPaneWidth[width];\n    }\n    let storedWidth;\n    try {\n      storedWidth = localStorage.getItem(widthStorageKey);\n    } catch (error) {\n      storedWidth = null;\n    }\n    return storedWidth && !isNaN(Number(storedWidth)) ? Number(storedWidth) : defaultPaneWidth[width];\n  });\n  const updatePaneWidth = width => {\n    setPaneWidth(width);\n    try {\n      localStorage.setItem(widthStorageKey, width.toString());\n    } catch (error) {\n      // Ignore errors\n    }\n  };\n  const paneRef = React.useRef(null);\n  useRefObjectAsForwardedRef(forwardRef, paneRef);\n  return /*#__PURE__*/React.createElement(Box\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  , {\n    sx: theme => merge({\n      // Narrow viewports\n      display: isHidden ? 'none' : 'flex',\n      order: panePositions[position],\n      width: '100%',\n      marginX: 0,\n      ...(position === 'end' ? {\n        flexDirection: 'column',\n        marginTop: SPACING_MAP[rowGap]\n      } : {\n        flexDirection: 'column-reverse',\n        marginBottom: SPACING_MAP[rowGap]\n      }),\n      // Regular and wide viewports\n      [`@media screen and (min-width: ${theme.breakpoints[1]})`]: {\n        width: 'auto',\n        marginY: '0 !important',\n        ...(sticky ? {\n          position: 'sticky',\n          // If offsetHeader has value, it will stick the pane to the position where the sticky top ends\n          // else top will be 0 as the default value of offsetHeader\n          top: typeof offsetHeader === 'number' ? `${offsetHeader}px` : offsetHeader,\n          maxHeight: 'var(--sticky-pane-height)'\n        } : {}),\n        ...(position === 'end' ? {\n          flexDirection: 'row',\n          marginLeft: SPACING_MAP[columnGap]\n        } : {\n          flexDirection: 'row-reverse',\n          marginRight: SPACING_MAP[columnGap]\n        })\n      }\n    }, sx)\n  }, /*#__PURE__*/React.createElement(HorizontalDivider, {\n    variant: {\n      narrow: dividerVariant,\n      regular: 'none'\n    },\n    sx: {\n      [position === 'end' ? 'marginBottom' : 'marginTop']: SPACING_MAP[rowGap]\n    }\n  }), /*#__PURE__*/React.createElement(VerticalDivider, {\n    variant: {\n      narrow: 'none',\n      // If pane is resizable, always show a vertical divider on regular viewports\n      regular: resizable ? 'line' : dividerVariant\n    }\n    // If pane is resizable, the divider should be draggable\n    ,\n    draggable: resizable,\n    sx: {\n      [position === 'end' ? 'marginRight' : 'marginLeft']: SPACING_MAP[columnGap]\n    },\n    onDrag: delta => {\n      // Get the number of pixels the divider was dragged\n      const deltaWithDirection = position === 'end' ? -delta : delta;\n      updatePaneWidth(paneWidth + deltaWithDirection);\n    }\n    // Ensure `paneWidth` state and actual pane width are in sync when the drag ends\n    ,\n    onDragEnd: () => {\n      var _paneRef$current;\n      const paneRect = (_paneRef$current = paneRef.current) === null || _paneRef$current === void 0 ? void 0 : _paneRef$current.getBoundingClientRect();\n      if (!paneRect) return;\n      updatePaneWidth(paneRect.width);\n    }\n    // Reset pane width on double click\n    ,\n    onDoubleClick: () => updatePaneWidth(defaultPaneWidth[width])\n  }), /*#__PURE__*/React.createElement(Box, {\n    ref: paneRef,\n    style: {\n      // @ts-ignore CSS custom properties are not supported by TypeScript\n      '--pane-width': `${paneWidth}px`\n    },\n    sx: theme => ({\n      '--pane-min-width': `256px`,\n      '--pane-max-width': `calc(100vw - 511px)`,\n      width: resizable ? ['100%', null, 'clamp(var(--pane-min-width), var(--pane-width), var(--pane-max-width))'] : paneWidths[width],\n      padding: SPACING_MAP[padding],\n      [`@media screen and (min-width: ${theme.breakpoints[1]})`]: {\n        overflow: 'auto'\n      },\n      [`@media screen and (min-width: ${theme.breakpoints[3]})`]: {\n        '--pane-max-width': 'calc(100vw - 959px)'\n      }\n    })\n  }, children));\n});\nPane.displayName = 'PageLayout.Pane';\n\n// ----------------------------------------------------------------------------\n// PageLayout.Footer\n\nconst Footer = ({\n  'aria-label': label,\n  'aria-labelledby': labelledBy,\n  padding = 'none',\n  divider = 'none',\n  dividerWhenNarrow = 'inherit',\n  hidden = false,\n  children,\n  sx = {}\n}) => {\n  // Combine divider and dividerWhenNarrow for backwards compatibility\n  const dividerProp = !isResponsiveValue(divider) && dividerWhenNarrow !== 'inherit' ? {\n    regular: divider,\n    narrow: dividerWhenNarrow\n  } : divider;\n  const dividerVariant = useResponsiveValue(dividerProp, 'none');\n  const isHidden = useResponsiveValue(hidden, false);\n  const {\n    rowGap\n  } = React.useContext(PageLayoutContext);\n  return /*#__PURE__*/React.createElement(Slot, {\n    name: \"Footer\"\n  }, /*#__PURE__*/React.createElement(Box, {\n    as: \"footer\",\n    \"aria-label\": label,\n    \"aria-labelledby\": labelledBy,\n    hidden: isHidden,\n    sx: merge({\n      order: REGION_ORDER.footer,\n      width: '100%',\n      marginTop: SPACING_MAP[rowGap]\n    }, sx)\n  }, /*#__PURE__*/React.createElement(HorizontalDivider, {\n    variant: dividerVariant,\n    sx: {\n      marginBottom: SPACING_MAP[rowGap]\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      padding: SPACING_MAP[padding]\n    }\n  }, children)));\n};\nFooter.displayName = \"Footer\";\nFooter.displayName = 'PageLayout.Footer';\n\n// ----------------------------------------------------------------------------\n// Export\n\nconst PageLayout = Object.assign(Root, {\n  Header,\n  Content,\n  Pane,\n  Footer\n});\n\nexport { PageLayout };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}