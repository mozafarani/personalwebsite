{"ast":null,"code":"function buildPaginationModel(pageCount, currentPage, showPages, marginPageCount, surroundingPageCount) {\n  var pages = [];\n  if (showPages) {\n    var pageNums = [];\n    var addPage = function addPage(n) {\n      if (n >= 1 && n <= pageCount) {\n        pageNums.push(n);\n      }\n    };\n\n    // Start by defining the window of pages to show around the current page.\n    // If the window goes off either edge, shift it until it fits.\n    var extentLeft = currentPage - surroundingPageCount;\n    var extentRight = currentPage + surroundingPageCount;\n    if (extentLeft < 1 && extentRight > pageCount) {\n      // Our window is larger than the entire range,\n      // so simply display every page.\n      extentLeft = 1;\n      extentRight = pageCount;\n    } else if (extentLeft < 1) {\n      while (extentLeft < 1) {\n        extentLeft++;\n        extentRight++;\n      }\n    } else if (extentRight > pageCount) {\n      while (extentRight > pageCount) {\n        extentLeft--;\n        extentRight--;\n      }\n    }\n\n    // Next, include the pages in the margins.\n    // If a margin page is already covered in the window,\n    // extend the window to the other direction.\n    for (var i = 1; i <= marginPageCount; i++) {\n      var leftPage = i;\n      var rightPage = pageCount - (i - 1);\n      if (leftPage >= extentLeft) {\n        extentRight++;\n      } else {\n        addPage(leftPage);\n      }\n      if (rightPage <= extentRight) {\n        extentLeft--;\n      } else {\n        addPage(rightPage);\n      }\n    }\n    for (var _i = extentLeft; _i <= extentRight; _i++) {\n      addPage(_i);\n    }\n    var sorted = pageNums.slice().sort(function (a, b) {\n      return a - b;\n    }).filter(function (item, idx, ary) {\n      return !idx || item !== ary[idx - 1];\n    });\n    for (var idx = 0; idx < sorted.length; idx++) {\n      var num = sorted[idx];\n      var selected = num === currentPage;\n      if (idx === 0) {\n        if (num !== 1) {\n          // If the first page isn't page one,\n          // we need to add a break\n          pages.push({\n            type: 'BREAK',\n            num: 1\n          });\n        }\n        pages.push({\n          type: 'NUM',\n          num: num,\n          selected: selected\n        });\n      } else {\n        var last = sorted[idx - 1];\n        var delta = num - last;\n        if (delta === 1) {\n          pages.push({\n            type: 'NUM',\n            num: num,\n            selected: selected\n          });\n        } else {\n          // We skipped some, so add a break\n          pages.push({\n            type: 'BREAK',\n            num: num - 1\n          });\n          pages.push({\n            type: 'NUM',\n            num: num,\n            selected: selected\n          });\n        }\n      }\n    }\n    var lastPage = pages[pages.length - 1];\n    if (lastPage.type === 'NUM' && lastPage.num !== pageCount) {\n      // The last page we rendered wasn't the actual last page,\n      // so we need an additional break\n      pages.push({\n        type: 'BREAK',\n        num: pageCount\n      });\n    }\n  }\n  var prev = {\n    type: 'PREV',\n    num: currentPage - 1,\n    disabled: currentPage === 1\n  };\n  var next = {\n    type: 'NEXT',\n    num: currentPage + 1,\n    disabled: currentPage === pageCount\n  };\n  return [prev].concat(pages, [next]);\n}\nfunction buildComponentData(page, hrefBuilder, onClick) {\n  var props = {};\n  var content = '';\n  var key = '';\n  switch (page.type) {\n    case 'PREV':\n      {\n        key = 'page-prev';\n        content = 'Previous';\n        if (page.disabled) {\n          Object.assign(props, {\n            as: 'span',\n            'aria-disabled': 'true'\n          });\n        } else {\n          Object.assign(props, {\n            rel: 'prev',\n            href: hrefBuilder(page.num),\n            'aria-label': 'Previous Page',\n            onClick: onClick\n          });\n        }\n        break;\n      }\n    case 'NEXT':\n      {\n        key = 'page-next';\n        content = 'Next';\n        if (page.disabled) {\n          Object.assign(props, {\n            as: 'span',\n            'aria-disabled': 'true'\n          });\n        } else {\n          Object.assign(props, {\n            rel: 'next',\n            href: hrefBuilder(page.num),\n            'aria-label': 'Next Page',\n            onClick: onClick\n          });\n        }\n        break;\n      }\n    case 'NUM':\n      {\n        key = \"page-\".concat(page.num);\n        content = String(page.num);\n        if (page.selected) {\n          Object.assign(props, {\n            as: 'em',\n            'aria-current': 'page'\n          });\n        } else {\n          Object.assign(props, {\n            href: hrefBuilder(page.num),\n            'aria-label': \"Page \".concat(page.num),\n            onClick: onClick\n          });\n        }\n        break;\n      }\n    case 'BREAK':\n      {\n        key = \"page-\".concat(page.num, \"-break\");\n        content = 'â€¦';\n        Object.assign(props, {\n          as: 'span',\n          'aria-disabled': true\n        });\n      }\n  }\n  return {\n    props: props,\n    key: key,\n    content: content\n  };\n}\nexport { buildComponentData, buildPaginationModel };","map":{"version":3,"names":["buildPaginationModel","pageCount","currentPage","showPages","marginPageCount","surroundingPageCount","pages","pageNums","addPage","n","push","extentLeft","extentRight","i","leftPage","rightPage","sorted","slice","sort","a","b","filter","item","idx","ary","length","num","selected","type","last","delta","lastPage","prev","disabled","next","buildComponentData","page","hrefBuilder","onClick","props","content","key","Object","assign","as","rel","href","String"],"sources":["/Users/mohammedalzafarani/Desktop/personalwebsite/node_modules/@primer/react/lib-esm/Pagination/model.js"],"sourcesContent":["function buildPaginationModel(pageCount, currentPage, showPages, marginPageCount, surroundingPageCount) {\n  const pages = [];\n  if (showPages) {\n    const pageNums = [];\n    const addPage = n => {\n      if (n >= 1 && n <= pageCount) {\n        pageNums.push(n);\n      }\n    };\n\n    // Start by defining the window of pages to show around the current page.\n    // If the window goes off either edge, shift it until it fits.\n    let extentLeft = currentPage - surroundingPageCount;\n    let extentRight = currentPage + surroundingPageCount;\n    if (extentLeft < 1 && extentRight > pageCount) {\n      // Our window is larger than the entire range,\n      // so simply display every page.\n      extentLeft = 1;\n      extentRight = pageCount;\n    } else if (extentLeft < 1) {\n      while (extentLeft < 1) {\n        extentLeft++;\n        extentRight++;\n      }\n    } else if (extentRight > pageCount) {\n      while (extentRight > pageCount) {\n        extentLeft--;\n        extentRight--;\n      }\n    }\n\n    // Next, include the pages in the margins.\n    // If a margin page is already covered in the window,\n    // extend the window to the other direction.\n    for (let i = 1; i <= marginPageCount; i++) {\n      const leftPage = i;\n      const rightPage = pageCount - (i - 1);\n      if (leftPage >= extentLeft) {\n        extentRight++;\n      } else {\n        addPage(leftPage);\n      }\n      if (rightPage <= extentRight) {\n        extentLeft--;\n      } else {\n        addPage(rightPage);\n      }\n    }\n    for (let i = extentLeft; i <= extentRight; i++) {\n      addPage(i);\n    }\n    const sorted = pageNums.slice().sort((a, b) => a - b).filter((item, idx, ary) => !idx || item !== ary[idx - 1]);\n    for (let idx = 0; idx < sorted.length; idx++) {\n      const num = sorted[idx];\n      const selected = num === currentPage;\n      if (idx === 0) {\n        if (num !== 1) {\n          // If the first page isn't page one,\n          // we need to add a break\n          pages.push({\n            type: 'BREAK',\n            num: 1\n          });\n        }\n        pages.push({\n          type: 'NUM',\n          num,\n          selected\n        });\n      } else {\n        const last = sorted[idx - 1];\n        const delta = num - last;\n        if (delta === 1) {\n          pages.push({\n            type: 'NUM',\n            num,\n            selected\n          });\n        } else {\n          // We skipped some, so add a break\n          pages.push({\n            type: 'BREAK',\n            num: num - 1\n          });\n          pages.push({\n            type: 'NUM',\n            num,\n            selected\n          });\n        }\n      }\n    }\n    const lastPage = pages[pages.length - 1];\n    if (lastPage.type === 'NUM' && lastPage.num !== pageCount) {\n      // The last page we rendered wasn't the actual last page,\n      // so we need an additional break\n      pages.push({\n        type: 'BREAK',\n        num: pageCount\n      });\n    }\n  }\n  const prev = {\n    type: 'PREV',\n    num: currentPage - 1,\n    disabled: currentPage === 1\n  };\n  const next = {\n    type: 'NEXT',\n    num: currentPage + 1,\n    disabled: currentPage === pageCount\n  };\n  return [prev, ...pages, next];\n}\nfunction buildComponentData(page, hrefBuilder, onClick) {\n  const props = {};\n  let content = '';\n  let key = '';\n  switch (page.type) {\n    case 'PREV':\n      {\n        key = 'page-prev';\n        content = 'Previous';\n        if (page.disabled) {\n          Object.assign(props, {\n            as: 'span',\n            'aria-disabled': 'true'\n          });\n        } else {\n          Object.assign(props, {\n            rel: 'prev',\n            href: hrefBuilder(page.num),\n            'aria-label': 'Previous Page',\n            onClick\n          });\n        }\n        break;\n      }\n    case 'NEXT':\n      {\n        key = 'page-next';\n        content = 'Next';\n        if (page.disabled) {\n          Object.assign(props, {\n            as: 'span',\n            'aria-disabled': 'true'\n          });\n        } else {\n          Object.assign(props, {\n            rel: 'next',\n            href: hrefBuilder(page.num),\n            'aria-label': 'Next Page',\n            onClick\n          });\n        }\n        break;\n      }\n    case 'NUM':\n      {\n        key = `page-${page.num}`;\n        content = String(page.num);\n        if (page.selected) {\n          Object.assign(props, {\n            as: 'em',\n            'aria-current': 'page'\n          });\n        } else {\n          Object.assign(props, {\n            href: hrefBuilder(page.num),\n            'aria-label': `Page ${page.num}`,\n            onClick\n          });\n        }\n        break;\n      }\n    case 'BREAK':\n      {\n        key = `page-${page.num}-break`;\n        content = 'â€¦';\n        Object.assign(props, {\n          as: 'span',\n          'aria-disabled': true\n        });\n      }\n  }\n  return {\n    props,\n    key,\n    content\n  };\n}\n\nexport { buildComponentData, buildPaginationModel };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}