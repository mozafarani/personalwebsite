{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/mohammedalzafarani/Desktop/personalwebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { useMemo, useCallback, useEffect } from 'react';\n\n// Because events are handled at the document level, we provide a mechanism for early return.\nvar stopPropagation = true;\n\n/**\n * Calls all handlers in reverse order\n * @param event The MouseEvent generated by the click event.\n */\nfunction handleClick(event) {\n  if (!event.defaultPrevented) {\n    var _iterator = _createForOfIteratorHelper(Object.values(registry).reverse()),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var handler = _step.value;\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        if (handler(event) === stopPropagation || event.defaultPrevented) {\n          break;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n}\nvar registry = {};\nfunction register(id, handler) {\n  registry[id] = handler;\n}\nfunction deregister(id) {\n  delete registry[id];\n}\n\n// For auto-incrementing unique identifiers for registered handlers.\nvar handlerId = 0;\nvar useOnOutsideClick = function useOnOutsideClick(_ref) {\n  var containerRef = _ref.containerRef,\n    ignoreClickRefs = _ref.ignoreClickRefs,\n    onClickOutside = _ref.onClickOutside;\n  var id = useMemo(function () {\n    return handlerId++;\n  }, []);\n  var handler = useCallback(function (event) {\n    var _containerRef$current;\n    // don't call click handler if the mouse event was triggered by an auxiliary button (right click/wheel button/etc)\n    if (event instanceof MouseEvent && event.button > 0) {\n      return stopPropagation;\n    }\n\n    // don't call handler if the click happened inside of the container\n    if ((_containerRef$current = containerRef.current) !== null && _containerRef$current !== void 0 && _containerRef$current.contains(event.target)) {\n      return stopPropagation;\n    }\n\n    // don't call handler if click happened on an ignored ref\n    if (ignoreClickRefs && ignoreClickRefs.some(function (_ref2) {\n      var current = _ref2.current;\n      return current === null || current === void 0 ? void 0 : current.contains(event.target);\n    })) {\n      return stopPropagation;\n    }\n    onClickOutside(event);\n  }, [containerRef, ignoreClickRefs, onClickOutside]);\n  useEffect(function () {\n    if (Object.keys(registry).length === 0) {\n      // use capture to ensure we get all events\n      document.addEventListener('mousedown', handleClick, {\n        capture: true\n      });\n    }\n    register(id, handler);\n    return function () {\n      deregister(id);\n      if (Object.keys(registry).length === 0) {\n        document.removeEventListener('mousedown', handleClick, {\n          capture: true\n        });\n      }\n    };\n  }, [id, handler]);\n};\nexport { useOnOutsideClick };","map":{"version":3,"names":["useMemo","useCallback","useEffect","stopPropagation","handleClick","event","defaultPrevented","Object","values","registry","reverse","handler","register","id","deregister","handlerId","useOnOutsideClick","containerRef","ignoreClickRefs","onClickOutside","_containerRef$current","MouseEvent","button","current","contains","target","some","keys","length","document","addEventListener","capture","removeEventListener"],"sources":["/Users/mohammedalzafarani/Desktop/personalwebsite/node_modules/@primer/react/lib-esm/hooks/useOnOutsideClick.js"],"sourcesContent":["import { useMemo, useCallback, useEffect } from 'react';\n\n// Because events are handled at the document level, we provide a mechanism for early return.\nconst stopPropagation = true;\n\n/**\n * Calls all handlers in reverse order\n * @param event The MouseEvent generated by the click event.\n */\nfunction handleClick(event) {\n  if (!event.defaultPrevented) {\n    for (const handler of Object.values(registry).reverse()) {\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (handler(event) === stopPropagation || event.defaultPrevented) {\n        break;\n      }\n    }\n  }\n}\nconst registry = {};\nfunction register(id, handler) {\n  registry[id] = handler;\n}\nfunction deregister(id) {\n  delete registry[id];\n}\n\n// For auto-incrementing unique identifiers for registered handlers.\nlet handlerId = 0;\nconst useOnOutsideClick = ({\n  containerRef,\n  ignoreClickRefs,\n  onClickOutside\n}) => {\n  const id = useMemo(() => handlerId++, []);\n  const handler = useCallback(event => {\n    var _containerRef$current;\n    // don't call click handler if the mouse event was triggered by an auxiliary button (right click/wheel button/etc)\n    if (event instanceof MouseEvent && event.button > 0) {\n      return stopPropagation;\n    }\n\n    // don't call handler if the click happened inside of the container\n    if ((_containerRef$current = containerRef.current) !== null && _containerRef$current !== void 0 && _containerRef$current.contains(event.target)) {\n      return stopPropagation;\n    }\n\n    // don't call handler if click happened on an ignored ref\n    if (ignoreClickRefs && ignoreClickRefs.some(({\n      current\n    }) => current === null || current === void 0 ? void 0 : current.contains(event.target))) {\n      return stopPropagation;\n    }\n    onClickOutside(event);\n  }, [containerRef, ignoreClickRefs, onClickOutside]);\n  useEffect(() => {\n    if (Object.keys(registry).length === 0) {\n      // use capture to ensure we get all events\n      document.addEventListener('mousedown', handleClick, {\n        capture: true\n      });\n    }\n    register(id, handler);\n    return () => {\n      deregister(id);\n      if (Object.keys(registry).length === 0) {\n        document.removeEventListener('mousedown', handleClick, {\n          capture: true\n        });\n      }\n    };\n  }, [id, handler]);\n};\n\nexport { useOnOutsideClick };\n"],"mappings":";AAAA,SAASA,OAAO,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;;AAEvD;AACA,IAAMC,eAAe,GAAG,IAAI;;AAE5B;AACA;AACA;AACA;AACA,SAASC,WAAW,CAACC,KAAK,EAAE;EAC1B,IAAI,CAACA,KAAK,CAACC,gBAAgB,EAAE;IAAA,2CACLC,MAAM,CAACC,MAAM,CAACC,QAAQ,CAAC,CAACC,OAAO,EAAE;MAAA;IAAA;MAAvD,oDAAyD;QAAA,IAA9CC,OAAO;QAChB;QACA,IAAIA,OAAO,CAACN,KAAK,CAAC,KAAKF,eAAe,IAAIE,KAAK,CAACC,gBAAgB,EAAE;UAChE;QACF;MACF;IAAC;MAAA;IAAA;MAAA;IAAA;EACH;AACF;AACA,IAAMG,QAAQ,GAAG,CAAC,CAAC;AACnB,SAASG,QAAQ,CAACC,EAAE,EAAEF,OAAO,EAAE;EAC7BF,QAAQ,CAACI,EAAE,CAAC,GAAGF,OAAO;AACxB;AACA,SAASG,UAAU,CAACD,EAAE,EAAE;EACtB,OAAOJ,QAAQ,CAACI,EAAE,CAAC;AACrB;;AAEA;AACA,IAAIE,SAAS,GAAG,CAAC;AACjB,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,OAIjB;EAAA,IAHJC,YAAY,QAAZA,YAAY;IACZC,eAAe,QAAfA,eAAe;IACfC,cAAc,QAAdA,cAAc;EAEd,IAAMN,EAAE,GAAGb,OAAO,CAAC;IAAA,OAAMe,SAAS,EAAE;EAAA,GAAE,EAAE,CAAC;EACzC,IAAMJ,OAAO,GAAGV,WAAW,CAAC,UAAAI,KAAK,EAAI;IACnC,IAAIe,qBAAqB;IACzB;IACA,IAAIf,KAAK,YAAYgB,UAAU,IAAIhB,KAAK,CAACiB,MAAM,GAAG,CAAC,EAAE;MACnD,OAAOnB,eAAe;IACxB;;IAEA;IACA,IAAI,CAACiB,qBAAqB,GAAGH,YAAY,CAACM,OAAO,MAAM,IAAI,IAAIH,qBAAqB,KAAK,KAAK,CAAC,IAAIA,qBAAqB,CAACI,QAAQ,CAACnB,KAAK,CAACoB,MAAM,CAAC,EAAE;MAC/I,OAAOtB,eAAe;IACxB;;IAEA;IACA,IAAIe,eAAe,IAAIA,eAAe,CAACQ,IAAI,CAAC;MAAA,IAC1CH,OAAO,SAAPA,OAAO;MAAA,OACHA,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACC,QAAQ,CAACnB,KAAK,CAACoB,MAAM,CAAC;IAAA,EAAC,EAAE;MACvF,OAAOtB,eAAe;IACxB;IACAgB,cAAc,CAACd,KAAK,CAAC;EACvB,CAAC,EAAE,CAACY,YAAY,EAAEC,eAAe,EAAEC,cAAc,CAAC,CAAC;EACnDjB,SAAS,CAAC,YAAM;IACd,IAAIK,MAAM,CAACoB,IAAI,CAAClB,QAAQ,CAAC,CAACmB,MAAM,KAAK,CAAC,EAAE;MACtC;MACAC,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAE1B,WAAW,EAAE;QAClD2B,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;IACAnB,QAAQ,CAACC,EAAE,EAAEF,OAAO,CAAC;IACrB,OAAO,YAAM;MACXG,UAAU,CAACD,EAAE,CAAC;MACd,IAAIN,MAAM,CAACoB,IAAI,CAAClB,QAAQ,CAAC,CAACmB,MAAM,KAAK,CAAC,EAAE;QACtCC,QAAQ,CAACG,mBAAmB,CAAC,WAAW,EAAE5B,WAAW,EAAE;UACrD2B,OAAO,EAAE;QACX,CAAC,CAAC;MACJ;IACF,CAAC;EACH,CAAC,EAAE,CAAClB,EAAE,EAAEF,OAAO,CAAC,CAAC;AACnB,CAAC;AAED,SAASK,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}