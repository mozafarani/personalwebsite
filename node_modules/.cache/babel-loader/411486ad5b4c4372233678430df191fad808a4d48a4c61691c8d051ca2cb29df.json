{"ast":null,"code":"import _objectSpread from \"/Users/mohammedalzafarani/Desktop/personalwebsite/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/Users/mohammedalzafarani/Desktop/personalwebsite/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/mohammedalzafarani/Desktop/personalwebsite/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/mohammedalzafarani/Desktop/personalwebsite/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"open\", \"onOpenChange\", \"renderAnchor\", \"anchorRef\", \"placeholder\", \"selected\", \"onSelectedChange\", \"filterValue\", \"onFilterChange\", \"items\", \"textInputProps\", \"overlayProps\", \"sx\"];\nimport React, { useCallback, useMemo } from 'react';\nimport { useProvidedStateOrCreate } from '../hooks/useProvidedStateOrCreate.js';\nimport { useProvidedRefOrCreate } from '../hooks/useProvidedRefOrCreate.js';\nimport { AnchoredOverlay } from '../AnchoredOverlay/AnchoredOverlay.js';\nimport { FilteredActionList } from '../FilteredActionList/FilteredActionList.js';\nimport { DropdownButton } from '../deprecated/DropdownMenu/DropdownButton.js';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction isMultiSelectVariant(selected) {\n  return Array.isArray(selected);\n}\nvar focusZoneSettings = {\n  // Let FilteredActionList handle focus zone\n  disabled: true\n};\nfunction SelectPanel(_ref) {\n  var open = _ref.open,\n    onOpenChange = _ref.onOpenChange,\n    _ref$renderAnchor = _ref.renderAnchor,\n    renderAnchor = _ref$renderAnchor === void 0 ? function (props) {\n      return /*#__PURE__*/React.createElement(DropdownButton, props);\n    } : _ref$renderAnchor,\n    externalAnchorRef = _ref.anchorRef,\n    placeholder = _ref.placeholder,\n    selected = _ref.selected,\n    onSelectedChange = _ref.onSelectedChange,\n    externalFilterValue = _ref.filterValue,\n    externalOnFilterChange = _ref.onFilterChange,\n    items = _ref.items,\n    textInputProps = _ref.textInputProps,\n    overlayProps = _ref.overlayProps,\n    sx = _ref.sx,\n    listProps = _objectWithoutProperties(_ref, _excluded);\n  var _useProvidedStateOrCr = useProvidedStateOrCreate(externalFilterValue, undefined, ''),\n    _useProvidedStateOrCr2 = _slicedToArray(_useProvidedStateOrCr, 2),\n    filterValue = _useProvidedStateOrCr2[0],\n    setInternalFilterValue = _useProvidedStateOrCr2[1];\n  var onFilterChange = useCallback(function (value, e) {\n    externalOnFilterChange(value, e);\n    setInternalFilterValue(value);\n  }, [externalOnFilterChange, setInternalFilterValue]);\n  var anchorRef = useProvidedRefOrCreate(externalAnchorRef);\n  var onOpen = useCallback(function (gesture) {\n    return onOpenChange(true, gesture);\n  }, [onOpenChange]);\n  var onClose = useCallback(function (gesture) {\n    onOpenChange(false, gesture);\n  }, [onOpenChange]);\n  var renderMenuAnchor = useMemo(function () {\n    if (renderAnchor === null) {\n      return null;\n    }\n    var selectedItems = Array.isArray(selected) ? selected : _toConsumableArray(selected ? [selected] : []);\n    return function (props) {\n      return renderAnchor(_objectSpread(_objectSpread({}, props), {}, {\n        children: selectedItems.length ? selectedItems.map(function (item) {\n          return item.text;\n        }).join(', ') : placeholder\n      }));\n    };\n  }, [placeholder, renderAnchor, selected]);\n  var itemsToRender = useMemo(function () {\n    return items.map(function (item) {\n      var isItemSelected = isMultiSelectVariant(selected) ? selected.includes(item) : selected === item;\n      return _objectSpread(_objectSpread({}, item), {}, {\n        role: 'option',\n        selected: 'selected' in item && item.selected === undefined ? undefined : isItemSelected,\n        onAction: function onAction(itemFromAction, event) {\n          var _item$onAction;\n          (_item$onAction = item.onAction) === null || _item$onAction === void 0 ? void 0 : _item$onAction.call(item, itemFromAction, event);\n          if (event.defaultPrevented) {\n            return;\n          }\n          if (isMultiSelectVariant(selected)) {\n            var otherSelectedItems = selected.filter(function (selectedItem) {\n              return selectedItem !== item;\n            });\n            var newSelectedItems = selected.includes(item) ? otherSelectedItems : [].concat(_toConsumableArray(otherSelectedItems), [item]);\n            var multiSelectOnChange = onSelectedChange;\n            multiSelectOnChange(newSelectedItems);\n            return;\n          }\n\n          // single select\n          var singleSelectOnChange = onSelectedChange;\n          singleSelectOnChange(item === selected ? undefined : item);\n          onClose('selection');\n        }\n      });\n    });\n  }, [onClose, onSelectedChange, items, selected]);\n  var inputRef = React.useRef(null);\n  var focusTrapSettings = {\n    initialFocusRef: inputRef\n  };\n  var extendedTextInputProps = useMemo(function () {\n    return _objectSpread({\n      sx: {\n        m: 2\n      },\n      contrast: true\n    }, textInputProps);\n  }, [textInputProps]);\n  return /*#__PURE__*/React.createElement(AnchoredOverlay, {\n    renderAnchor: renderMenuAnchor,\n    anchorRef: anchorRef,\n    open: open,\n    onOpen: onOpen,\n    onClose: onClose,\n    overlayProps: overlayProps,\n    focusTrapSettings: focusTrapSettings,\n    focusZoneSettings: focusZoneSettings\n  }, /*#__PURE__*/React.createElement(FilteredActionList, _extends({\n    filterValue: filterValue,\n    onFilterChange: onFilterChange\n  }, listProps, {\n    role: \"listbox\",\n    \"aria-multiselectable\": isMultiSelectVariant(selected) ? 'true' : 'false',\n    selectionVariant: isMultiSelectVariant(selected) ? 'multiple' : 'single',\n    items: itemsToRender,\n    textInputProps: extendedTextInputProps,\n    inputRef: inputRef\n    // inheriting height and maxHeight ensures that the FilteredActionList is never taller\n    // than the Overlay (which would break scrolling the items)\n    ,\n\n    sx: _objectSpread(_objectSpread({}, sx), {}, {\n      height: 'inherit',\n      maxHeight: 'inherit'\n    })\n  })));\n}\nSelectPanel.displayName = \"SelectPanel\";\nSelectPanel.displayName = 'SelectPanel';\nexport { SelectPanel };","map":{"version":3,"names":["React","useCallback","useMemo","useProvidedStateOrCreate","useProvidedRefOrCreate","AnchoredOverlay","FilteredActionList","DropdownButton","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","isMultiSelectVariant","selected","Array","isArray","focusZoneSettings","disabled","SelectPanel","open","onOpenChange","renderAnchor","props","createElement","externalAnchorRef","anchorRef","placeholder","onSelectedChange","externalFilterValue","filterValue","externalOnFilterChange","onFilterChange","items","textInputProps","overlayProps","sx","listProps","undefined","setInternalFilterValue","value","e","onOpen","gesture","onClose","renderMenuAnchor","selectedItems","children","map","item","text","join","itemsToRender","isItemSelected","includes","role","onAction","itemFromAction","event","_item$onAction","defaultPrevented","otherSelectedItems","filter","selectedItem","newSelectedItems","multiSelectOnChange","singleSelectOnChange","inputRef","useRef","focusTrapSettings","initialFocusRef","extendedTextInputProps","m","contrast","selectionVariant","height","maxHeight","displayName"],"sources":["/Users/mohammedalzafarani/Desktop/personalwebsite/node_modules/@primer/react/lib-esm/SelectPanel/SelectPanel.js"],"sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport { useProvidedStateOrCreate } from '../hooks/useProvidedStateOrCreate.js';\nimport { useProvidedRefOrCreate } from '../hooks/useProvidedRefOrCreate.js';\nimport { AnchoredOverlay } from '../AnchoredOverlay/AnchoredOverlay.js';\nimport { FilteredActionList } from '../FilteredActionList/FilteredActionList.js';\nimport { DropdownButton } from '../deprecated/DropdownMenu/DropdownButton.js';\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction isMultiSelectVariant(selected) {\n  return Array.isArray(selected);\n}\nconst focusZoneSettings = {\n  // Let FilteredActionList handle focus zone\n  disabled: true\n};\nfunction SelectPanel({\n  open,\n  onOpenChange,\n  renderAnchor = props => /*#__PURE__*/React.createElement(DropdownButton, props),\n  anchorRef: externalAnchorRef,\n  placeholder,\n  selected,\n  onSelectedChange,\n  filterValue: externalFilterValue,\n  onFilterChange: externalOnFilterChange,\n  items,\n  textInputProps,\n  overlayProps,\n  sx,\n  ...listProps\n}) {\n  const [filterValue, setInternalFilterValue] = useProvidedStateOrCreate(externalFilterValue, undefined, '');\n  const onFilterChange = useCallback((value, e) => {\n    externalOnFilterChange(value, e);\n    setInternalFilterValue(value);\n  }, [externalOnFilterChange, setInternalFilterValue]);\n  const anchorRef = useProvidedRefOrCreate(externalAnchorRef);\n  const onOpen = useCallback(gesture => onOpenChange(true, gesture), [onOpenChange]);\n  const onClose = useCallback(gesture => {\n    onOpenChange(false, gesture);\n  }, [onOpenChange]);\n  const renderMenuAnchor = useMemo(() => {\n    if (renderAnchor === null) {\n      return null;\n    }\n    const selectedItems = Array.isArray(selected) ? selected : [...(selected ? [selected] : [])];\n    return props => {\n      return renderAnchor({\n        ...props,\n        children: selectedItems.length ? selectedItems.map(item => item.text).join(', ') : placeholder\n      });\n    };\n  }, [placeholder, renderAnchor, selected]);\n  const itemsToRender = useMemo(() => {\n    return items.map(item => {\n      const isItemSelected = isMultiSelectVariant(selected) ? selected.includes(item) : selected === item;\n      return {\n        ...item,\n        role: 'option',\n        selected: 'selected' in item && item.selected === undefined ? undefined : isItemSelected,\n        onAction: (itemFromAction, event) => {\n          var _item$onAction;\n          (_item$onAction = item.onAction) === null || _item$onAction === void 0 ? void 0 : _item$onAction.call(item, itemFromAction, event);\n          if (event.defaultPrevented) {\n            return;\n          }\n          if (isMultiSelectVariant(selected)) {\n            const otherSelectedItems = selected.filter(selectedItem => selectedItem !== item);\n            const newSelectedItems = selected.includes(item) ? otherSelectedItems : [...otherSelectedItems, item];\n            const multiSelectOnChange = onSelectedChange;\n            multiSelectOnChange(newSelectedItems);\n            return;\n          }\n\n          // single select\n          const singleSelectOnChange = onSelectedChange;\n          singleSelectOnChange(item === selected ? undefined : item);\n          onClose('selection');\n        }\n      };\n    });\n  }, [onClose, onSelectedChange, items, selected]);\n  const inputRef = React.useRef(null);\n  const focusTrapSettings = {\n    initialFocusRef: inputRef\n  };\n  const extendedTextInputProps = useMemo(() => {\n    return {\n      sx: {\n        m: 2\n      },\n      contrast: true,\n      ...textInputProps\n    };\n  }, [textInputProps]);\n  return /*#__PURE__*/React.createElement(AnchoredOverlay, {\n    renderAnchor: renderMenuAnchor,\n    anchorRef: anchorRef,\n    open: open,\n    onOpen: onOpen,\n    onClose: onClose,\n    overlayProps: overlayProps,\n    focusTrapSettings: focusTrapSettings,\n    focusZoneSettings: focusZoneSettings\n  }, /*#__PURE__*/React.createElement(FilteredActionList, _extends({\n    filterValue: filterValue,\n    onFilterChange: onFilterChange\n  }, listProps, {\n    role: \"listbox\",\n    \"aria-multiselectable\": isMultiSelectVariant(selected) ? 'true' : 'false',\n    selectionVariant: isMultiSelectVariant(selected) ? 'multiple' : 'single',\n    items: itemsToRender,\n    textInputProps: extendedTextInputProps,\n    inputRef: inputRef\n    // inheriting height and maxHeight ensures that the FilteredActionList is never taller\n    // than the Overlay (which would break scrolling the items)\n    ,\n    sx: {\n      ...sx,\n      height: 'inherit',\n      maxHeight: 'inherit'\n    }\n  })));\n}\nSelectPanel.displayName = \"SelectPanel\";\nSelectPanel.displayName = 'SelectPanel';\n\nexport { SelectPanel };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}