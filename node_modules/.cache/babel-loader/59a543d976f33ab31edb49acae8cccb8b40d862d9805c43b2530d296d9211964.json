{"ast":null,"code":"import { useOnOutsideClick } from './useOnOutsideClick.js';\nimport { useOpenAndCloseFocus } from './useOpenAndCloseFocus.js';\nimport { useOnEscapePress } from './useOnEscapePress.js';\nimport { useProvidedRefOrCreate } from './useProvidedRefOrCreate.js';\nvar useOverlay = function useOverlay(_ref) {\n  var _overlayRef = _ref.overlayRef,\n    returnFocusRef = _ref.returnFocusRef,\n    initialFocusRef = _ref.initialFocusRef,\n    onEscape = _ref.onEscape,\n    ignoreClickRefs = _ref.ignoreClickRefs,\n    onClickOutside = _ref.onClickOutside,\n    preventFocusOnOpen = _ref.preventFocusOnOpen;\n  var overlayRef = useProvidedRefOrCreate(_overlayRef);\n  useOpenAndCloseFocus({\n    containerRef: overlayRef,\n    returnFocusRef: returnFocusRef,\n    initialFocusRef: initialFocusRef,\n    preventFocusOnOpen: preventFocusOnOpen\n  });\n  useOnOutsideClick({\n    containerRef: overlayRef,\n    ignoreClickRefs: ignoreClickRefs,\n    onClickOutside: onClickOutside\n  });\n\n  // We only want one overlay to close at a time\n  var preventeddefaultCheckedEscape = function preventeddefaultCheckedEscape(event) {\n    onEscape(event);\n    event.preventDefault();\n  };\n  useOnEscapePress(preventeddefaultCheckedEscape);\n  return {\n    ref: overlayRef\n  };\n};\nexport { useOverlay };","map":{"version":3,"names":["useOnOutsideClick","useOpenAndCloseFocus","useOnEscapePress","useProvidedRefOrCreate","useOverlay","_overlayRef","overlayRef","returnFocusRef","initialFocusRef","onEscape","ignoreClickRefs","onClickOutside","preventFocusOnOpen","containerRef","preventeddefaultCheckedEscape","event","preventDefault","ref"],"sources":["/Users/mohammedalzafarani/Desktop/personalwebsite/node_modules/@primer/react/lib-esm/hooks/useOverlay.js"],"sourcesContent":["import { useOnOutsideClick } from './useOnOutsideClick.js';\nimport { useOpenAndCloseFocus } from './useOpenAndCloseFocus.js';\nimport { useOnEscapePress } from './useOnEscapePress.js';\nimport { useProvidedRefOrCreate } from './useProvidedRefOrCreate.js';\n\nconst useOverlay = ({\n  overlayRef: _overlayRef,\n  returnFocusRef,\n  initialFocusRef,\n  onEscape,\n  ignoreClickRefs,\n  onClickOutside,\n  preventFocusOnOpen\n}) => {\n  const overlayRef = useProvidedRefOrCreate(_overlayRef);\n  useOpenAndCloseFocus({\n    containerRef: overlayRef,\n    returnFocusRef,\n    initialFocusRef,\n    preventFocusOnOpen\n  });\n  useOnOutsideClick({\n    containerRef: overlayRef,\n    ignoreClickRefs,\n    onClickOutside\n  });\n\n  // We only want one overlay to close at a time\n  const preventeddefaultCheckedEscape = event => {\n    onEscape(event);\n    event.preventDefault();\n  };\n  useOnEscapePress(preventeddefaultCheckedEscape);\n  return {\n    ref: overlayRef\n  };\n};\n\nexport { useOverlay };\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,wBAAwB;AAC1D,SAASC,oBAAoB,QAAQ,2BAA2B;AAChE,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,SAASC,sBAAsB,QAAQ,6BAA6B;AAEpE,IAAMC,UAAU,GAAG,SAAbA,UAAU,OAQV;EAAA,IAPQC,WAAW,QAAvBC,UAAU;IACVC,cAAc,QAAdA,cAAc;IACdC,eAAe,QAAfA,eAAe;IACfC,QAAQ,QAARA,QAAQ;IACRC,eAAe,QAAfA,eAAe;IACfC,cAAc,QAAdA,cAAc;IACdC,kBAAkB,QAAlBA,kBAAkB;EAElB,IAAMN,UAAU,GAAGH,sBAAsB,CAACE,WAAW,CAAC;EACtDJ,oBAAoB,CAAC;IACnBY,YAAY,EAAEP,UAAU;IACxBC,cAAc,EAAdA,cAAc;IACdC,eAAe,EAAfA,eAAe;IACfI,kBAAkB,EAAlBA;EACF,CAAC,CAAC;EACFZ,iBAAiB,CAAC;IAChBa,YAAY,EAAEP,UAAU;IACxBI,eAAe,EAAfA,eAAe;IACfC,cAAc,EAAdA;EACF,CAAC,CAAC;;EAEF;EACA,IAAMG,6BAA6B,GAAG,SAAhCA,6BAA6B,CAAGC,KAAK,EAAI;IAC7CN,QAAQ,CAACM,KAAK,CAAC;IACfA,KAAK,CAACC,cAAc,EAAE;EACxB,CAAC;EACDd,gBAAgB,CAACY,6BAA6B,CAAC;EAC/C,OAAO;IACLG,GAAG,EAAEX;EACP,CAAC;AACH,CAAC;AAED,SAASF,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}